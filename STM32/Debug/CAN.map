Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to stm32f2xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to system_stm32f2xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to led.o(.text.LED_spi_thread) for LED_spi_thread
    main.o(.text.main) refers to led.o(.rodata.LED_SpiThreadAttr) for LED_SpiThreadAttr
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to led.o(.bss.LED_SpiThreadID) for LED_SpiThreadID
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.HAL_GetTick) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.HAL_GetTick) refers to main.o(.bss.HAL_GetTick.ticks) for HAL_GetTick.ticks
    main.o(.ARM.exidx.text.HAL_GetTick) refers to main.o(.text.HAL_GetTick) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.HAL_InitTick) refers to main.o(.text.HAL_InitTick) for [Anonymous Symbol]
    led.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_set_amount) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_set_amount) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_set_amount) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_set_amount) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_set_amount) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_set_amount) refers to led.o(.data.g_LedNumber) for g_LedNumber
    led.o(.ARM.exidx.text.LED_set_amount) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_set_amount) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_set_amount) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_set_amount) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_set_amount) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_set_amount) refers to led.o(.text.LED_set_amount) for [Anonymous Symbol]
    led.o(.text.LED_init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_init) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_init) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_init) refers to spi_stm32f2xx.o(.rodata.Driver_SPI2) for Driver_SPI2
    led.o(.text.LED_init) refers to led.o(.text.LED_spi_callback) for LED_spi_callback
    led.o(.text.LED_init) refers to stdio_streams.o(.bss) for __stderr
    led.o(.text.LED_init) refers to led.o(.rodata.str1.1) for .L.str.2
    led.o(.text.LED_init) refers to noretval__2fprintf.o(.text) for __2fprintf
    led.o(.ARM.exidx.text.LED_init) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_init) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_init) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_init) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_init) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_init) refers to led.o(.text.LED_init) for [Anonymous Symbol]
    led.o(.text.LED_spi_callback) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_spi_callback) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_spi_callback) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_spi_callback) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_spi_callback) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_spi_callback) refers to puts_locked.o(.text) for puts
    led.o(.text.LED_spi_callback) refers to led.o(.bss.LED_SpiThreadID) for LED_SpiThreadID
    led.o(.text.LED_spi_callback) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    led.o(.text.LED_spi_callback) refers to stdio_streams.o(.bss) for __stderr
    led.o(.text.LED_spi_callback) refers to fwritefast_locked.o(.text) for fwrite
    led.o(.ARM.exidx.text.LED_spi_callback) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_spi_callback) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_spi_callback) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_spi_callback) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_spi_callback) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_spi_callback) refers to led.o(.text.LED_spi_callback) for [Anonymous Symbol]
    led.o(.text.LED_spi_thread) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_spi_thread) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_spi_thread) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_spi_thread) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_spi_thread) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_spi_thread) refers to led.o(.rodata..L__const.LED_spi_thread.red) for .L__const.LED_spi_thread.red
    led.o(.text.LED_spi_thread) refers to led.o(.rodata..L__const.LED_spi_thread.green) for .L__const.LED_spi_thread.green
    led.o(.text.LED_spi_thread) refers to led.o(.rodata..L__const.LED_spi_thread.blue) for .L__const.LED_spi_thread.blue
    led.o(.text.LED_spi_thread) refers to led.o(.text.LED_init) for LED_init
    led.o(.text.LED_spi_thread) refers to led.o(.text.LED_start_frame) for LED_start_frame
    led.o(.text.LED_spi_thread) refers to led.o(.text.LED_clear) for LED_clear
    led.o(.text.LED_spi_thread) refers to led.o(.text.LED_end_frame) for LED_end_frame
    led.o(.text.LED_spi_thread) refers to led.o(.text.LED_send) for LED_send
    led.o(.text.LED_spi_thread) refers to led.o(.text.LED_set_pile_colors) for LED_set_pile_colors
    led.o(.text.LED_spi_thread) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    led.o(.ARM.exidx.text.LED_spi_thread) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_spi_thread) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_spi_thread) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_spi_thread) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_spi_thread) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_spi_thread) refers to led.o(.text.LED_spi_thread) for [Anonymous Symbol]
    led.o(.text.LED_set_pile_colors) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_set_pile_colors) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_set_pile_colors) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_set_pile_colors) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_set_pile_colors) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_set_pile_colors) refers to led.o(.text.LED_set_colors) for LED_set_colors
    led.o(.ARM.exidx.text.LED_set_pile_colors) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_set_pile_colors) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_set_pile_colors) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_set_pile_colors) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_set_pile_colors) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_set_pile_colors) refers to led.o(.text.LED_set_pile_colors) for [Anonymous Symbol]
    led.o(.text.LED_start_frame) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_start_frame) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_start_frame) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_start_frame) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_start_frame) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_start_frame) refers to led.o(.bss.g_DataFrame) for g_DataFrame
    led.o(.ARM.exidx.text.LED_start_frame) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_start_frame) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_start_frame) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_start_frame) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_start_frame) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_start_frame) refers to led.o(.text.LED_start_frame) for [Anonymous Symbol]
    led.o(.text.LED_end_frame) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_end_frame) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_end_frame) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_end_frame) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_end_frame) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_end_frame) refers to led.o(.data.g_LedNumber) for g_LedNumber
    led.o(.text.LED_end_frame) refers to led.o(.bss.g_DataFrame) for g_DataFrame
    led.o(.ARM.exidx.text.LED_end_frame) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_end_frame) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_end_frame) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_end_frame) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_end_frame) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_end_frame) refers to led.o(.text.LED_end_frame) for [Anonymous Symbol]
    led.o(.text.LED_clear) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_clear) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_clear) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_clear) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_clear) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_clear) refers to led.o(.data.g_LedNumber) for g_LedNumber
    led.o(.text.LED_clear) refers to led.o(.text.LED_set_color) for LED_set_color
    led.o(.ARM.exidx.text.LED_clear) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_clear) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_clear) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_clear) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_clear) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_clear) refers to led.o(.text.LED_clear) for [Anonymous Symbol]
    led.o(.text.LED_set_color) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_set_color) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_set_color) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_set_color) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_set_color) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_set_color) refers to led.o(.bss.g_DataFrame) for g_DataFrame
    led.o(.ARM.exidx.text.LED_set_color) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_set_color) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_set_color) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_set_color) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_set_color) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_set_color) refers to led.o(.text.LED_set_color) for [Anonymous Symbol]
    led.o(.text.LED_set_colors) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_set_colors) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_set_colors) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_set_colors) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_set_colors) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_set_colors) refers to led.o(.text.LED_set_color) for LED_set_color
    led.o(.ARM.exidx.text.LED_set_colors) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_set_colors) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_set_colors) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_set_colors) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_set_colors) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_set_colors) refers to led.o(.text.LED_set_colors) for [Anonymous Symbol]
    led.o(.text.LED_send) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.text.LED_send) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.text.LED_send) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.text.LED_send) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.text.LED_send) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.text.LED_send) refers to led.o(.data.g_LedNumber) for g_LedNumber
    led.o(.text.LED_send) refers to spi_stm32f2xx.o(.rodata.Driver_SPI2) for Driver_SPI2
    led.o(.text.LED_send) refers to led.o(.bss.g_DataFrame) for g_DataFrame
    led.o(.text.LED_send) refers to stdio_streams.o(.bss) for __stderr
    led.o(.text.LED_send) refers to led.o(.rodata.str1.1) for .L.str.7
    led.o(.text.LED_send) refers to noretval__2fprintf.o(.text) for __2fprintf
    led.o(.text.LED_send) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    led.o(.ARM.exidx.text.LED_send) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.ARM.exidx.text.LED_send) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.ARM.exidx.text.LED_send) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.ARM.exidx.text.LED_send) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.ARM.exidx.text.LED_send) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.ARM.exidx.text.LED_send) refers to led.o(.text.LED_send) for [Anonymous Symbol]
    led.o(.rodata.str1.1) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.rodata.str1.1) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.rodata.str1.1) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.rodata.str1.1) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.rodata.str1.1) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.bss.g_SpiStack) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.bss.g_SpiStack) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.bss.g_SpiStack) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.bss.g_SpiStack) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.bss.g_SpiStack) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.rodata.LED_SpiThreadAttr) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.rodata.LED_SpiThreadAttr) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.rodata.LED_SpiThreadAttr) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.rodata.LED_SpiThreadAttr) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.rodata.LED_SpiThreadAttr) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.rodata.LED_SpiThreadAttr) refers to led.o(.rodata.str1.1) for [Anonymous Symbol]
    led.o(.rodata.LED_SpiThreadAttr) refers to led.o(.bss.g_SpiStack) for [Anonymous Symbol]
    led.o(.data.g_LedNumber) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.data.g_LedNumber) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.data.g_LedNumber) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.data.g_LedNumber) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.data.g_LedNumber) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.bss.LED_SpiThreadID) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.bss.LED_SpiThreadID) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.bss.LED_SpiThreadID) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.bss.LED_SpiThreadID) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.bss.LED_SpiThreadID) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.rodata..L__const.LED_spi_thread.red) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.rodata..L__const.LED_spi_thread.red) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.rodata..L__const.LED_spi_thread.red) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.rodata..L__const.LED_spi_thread.red) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.rodata..L__const.LED_spi_thread.red) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.rodata..L__const.LED_spi_thread.green) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.rodata..L__const.LED_spi_thread.green) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.rodata..L__const.LED_spi_thread.green) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.rodata..L__const.LED_spi_thread.green) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.rodata..L__const.LED_spi_thread.green) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.rodata..L__const.LED_spi_thread.blue) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.rodata..L__const.LED_spi_thread.blue) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.rodata..L__const.LED_spi_thread.blue) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.rodata..L__const.LED_spi_thread.blue) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.rodata..L__const.LED_spi_thread.blue) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    led.o(.bss.g_DataFrame) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    led.o(.bss.g_DataFrame) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    led.o(.bss.g_DataFrame) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    led.o(.bss.g_DataFrame) refers (Special) to _printf_str.o(.text) for _printf_str
    led.o(.bss.g_DataFrame) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    glcd_fonts.o(.rodata.GLCD_Font_6x8) refers to glcd_fonts.o(.rodata.Font_6x8_h) for [Anonymous Symbol]
    glcd_fonts.o(.rodata.GLCD_Font_16x24) refers to glcd_fonts.o(.rodata.Font_16x24_h) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_Initialize) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    glcd_mcbstm32f200.o(.text.GLCD_Initialize) refers to glcd_mcbstm32f200.o(.bss.hsram4) for hsram4
    glcd_mcbstm32f200.o(.text.GLCD_Initialize) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Init) for HAL_SRAM_Init
    glcd_mcbstm32f200.o(.text.GLCD_Initialize) refers to stm32f2xx_hal.o(.text.HAL_Delay) for HAL_Delay
    glcd_mcbstm32f200.o(.text.GLCD_Initialize) refers to glcd_mcbstm32f200.o(.text.rd_reg) for rd_reg
    glcd_mcbstm32f200.o(.text.GLCD_Initialize) refers to glcd_mcbstm32f200.o(.bss.Himax) for Himax
    glcd_mcbstm32f200.o(.text.GLCD_Initialize) refers to glcd_mcbstm32f200.o(.text.wr_reg) for wr_reg
    glcd_mcbstm32f200.o(.text.GLCD_Initialize) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_Initialize) refers to glcd_mcbstm32f200.o(.text.GLCD_Initialize) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.rd_reg) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.rd_reg) refers to glcd_mcbstm32f200.o(.text.rd_dat) for rd_dat
    glcd_mcbstm32f200.o(.ARM.exidx.text.rd_reg) refers to glcd_mcbstm32f200.o(.text.rd_reg) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.wr_reg) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.wr_reg) refers to glcd_mcbstm32f200.o(.text.wr_dat) for wr_dat
    glcd_mcbstm32f200.o(.ARM.exidx.text.wr_reg) refers to glcd_mcbstm32f200.o(.text.wr_reg) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_Uninitialize) refers to glcd_mcbstm32f200.o(.bss.hsram4) for hsram4
    glcd_mcbstm32f200.o(.text.GLCD_Uninitialize) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_DeInit) for HAL_SRAM_DeInit
    glcd_mcbstm32f200.o(.text.GLCD_Uninitialize) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_Uninitialize) refers to glcd_mcbstm32f200.o(.text.GLCD_Uninitialize) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_SetForegroundColor) refers to glcd_mcbstm32f200.o(.bss.foreground_color) for foreground_color
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_SetForegroundColor) refers to glcd_mcbstm32f200.o(.text.GLCD_SetForegroundColor) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_SetBackgroundColor) refers to glcd_mcbstm32f200.o(.data.background_color) for background_color
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_SetBackgroundColor) refers to glcd_mcbstm32f200.o(.text.GLCD_SetBackgroundColor) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_ClearScreen) refers to glcd_mcbstm32f200.o(.text.GLCD_SetWindow) for GLCD_SetWindow
    glcd_mcbstm32f200.o(.text.GLCD_ClearScreen) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.GLCD_ClearScreen) refers to glcd_mcbstm32f200.o(.data.background_color) for background_color
    glcd_mcbstm32f200.o(.text.GLCD_ClearScreen) refers to glcd_mcbstm32f200.o(.text.wr_dat_only) for wr_dat_only
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_ClearScreen) refers to glcd_mcbstm32f200.o(.text.GLCD_ClearScreen) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_SetWindow) refers to glcd_mcbstm32f200.o(.bss.Himax) for Himax
    glcd_mcbstm32f200.o(.text.GLCD_SetWindow) refers to glcd_mcbstm32f200.o(.text.wr_reg) for wr_reg
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_SetWindow) refers to glcd_mcbstm32f200.o(.text.GLCD_SetWindow) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.ARM.exidx.text.wr_cmd) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.ARM.exidx.text.wr_dat_only) refers to glcd_mcbstm32f200.o(.text.wr_dat_only) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_SetFont) refers to glcd_mcbstm32f200.o(.bss.active_font) for active_font
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_SetFont) refers to glcd_mcbstm32f200.o(.text.GLCD_SetFont) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_DrawPixel) refers to glcd_mcbstm32f200.o(.bss.Himax) for Himax
    glcd_mcbstm32f200.o(.text.GLCD_DrawPixel) refers to glcd_mcbstm32f200.o(.text.wr_reg) for wr_reg
    glcd_mcbstm32f200.o(.text.GLCD_DrawPixel) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.GLCD_DrawPixel) refers to glcd_mcbstm32f200.o(.bss.foreground_color) for foreground_color
    glcd_mcbstm32f200.o(.text.GLCD_DrawPixel) refers to glcd_mcbstm32f200.o(.text.wr_dat) for wr_dat
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawPixel) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawPixel) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.ARM.exidx.text.wr_dat) refers to glcd_mcbstm32f200.o(.text.wr_dat) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_DrawHLine) refers to glcd_mcbstm32f200.o(.text.GLCD_SetWindow) for GLCD_SetWindow
    glcd_mcbstm32f200.o(.text.GLCD_DrawHLine) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.GLCD_DrawHLine) refers to glcd_mcbstm32f200.o(.bss.foreground_color) for foreground_color
    glcd_mcbstm32f200.o(.text.GLCD_DrawHLine) refers to glcd_mcbstm32f200.o(.text.wr_dat_only) for wr_dat_only
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawHLine) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawHLine) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_DrawVLine) refers to glcd_mcbstm32f200.o(.text.GLCD_SetWindow) for GLCD_SetWindow
    glcd_mcbstm32f200.o(.text.GLCD_DrawVLine) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.GLCD_DrawVLine) refers to glcd_mcbstm32f200.o(.bss.foreground_color) for foreground_color
    glcd_mcbstm32f200.o(.text.GLCD_DrawVLine) refers to glcd_mcbstm32f200.o(.text.wr_dat_only) for wr_dat_only
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawVLine) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawVLine) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_DrawRectangle) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawHLine) for GLCD_DrawHLine
    glcd_mcbstm32f200.o(.text.GLCD_DrawRectangle) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawVLine) for GLCD_DrawVLine
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawRectangle) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawRectangle) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_DrawChar) refers to glcd_mcbstm32f200.o(.bss.active_font) for active_font
    glcd_mcbstm32f200.o(.text.GLCD_DrawChar) refers to glcd_mcbstm32f200.o(.text.GLCD_SetWindow) for GLCD_SetWindow
    glcd_mcbstm32f200.o(.text.GLCD_DrawChar) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.GLCD_DrawChar) refers to glcd_mcbstm32f200.o(.bss.foreground_color) for foreground_color
    glcd_mcbstm32f200.o(.text.GLCD_DrawChar) refers to glcd_mcbstm32f200.o(.data.background_color) for background_color
    glcd_mcbstm32f200.o(.text.GLCD_DrawChar) refers to glcd_mcbstm32f200.o(.text.wr_dat_only) for wr_dat_only
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawChar) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawChar) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_DrawString) refers to glcd_mcbstm32f200.o(.bss.active_font) for active_font
    glcd_mcbstm32f200.o(.text.GLCD_DrawString) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawChar) for GLCD_DrawChar
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawString) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawString) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_DrawBargraph) refers to glcd_mcbstm32f200.o(.text.GLCD_SetWindow) for GLCD_SetWindow
    glcd_mcbstm32f200.o(.text.GLCD_DrawBargraph) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.GLCD_DrawBargraph) refers to glcd_mcbstm32f200.o(.data.background_color) for background_color
    glcd_mcbstm32f200.o(.text.GLCD_DrawBargraph) refers to glcd_mcbstm32f200.o(.bss.foreground_color) for foreground_color
    glcd_mcbstm32f200.o(.text.GLCD_DrawBargraph) refers to glcd_mcbstm32f200.o(.text.wr_dat_only) for wr_dat_only
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawBargraph) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawBargraph) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_DrawBitmap) refers to glcd_mcbstm32f200.o(.text.GLCD_SetWindow) for GLCD_SetWindow
    glcd_mcbstm32f200.o(.text.GLCD_DrawBitmap) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.text.GLCD_DrawBitmap) refers to glcd_mcbstm32f200.o(.text.wr_dat_only) for wr_dat_only
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawBitmap) refers to glcd_mcbstm32f200.o(.text.GLCD_DrawBitmap) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_VScroll) refers to glcd_mcbstm32f200.o(.text.GLCD_VScroll) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.text.GLCD_FrameBufferAccess) refers to glcd_mcbstm32f200.o(.text.GLCD_SetWindow) for GLCD_SetWindow
    glcd_mcbstm32f200.o(.text.GLCD_FrameBufferAccess) refers to glcd_mcbstm32f200.o(.text.wr_reg) for wr_reg
    glcd_mcbstm32f200.o(.text.GLCD_FrameBufferAccess) refers to glcd_mcbstm32f200.o(.text.wr_cmd) for wr_cmd
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_FrameBufferAccess) refers to glcd_mcbstm32f200.o(.text.GLCD_FrameBufferAccess) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_FrameBufferAddress) refers to glcd_mcbstm32f200.o(.text.GLCD_FrameBufferAddress) for [Anonymous Symbol]
    glcd_mcbstm32f200.o(.ARM.exidx.text.rd_dat) refers to glcd_mcbstm32f200.o(.text.rd_dat) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    irq_armv7m.o(.text) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsException) refers to rtx_delay.o(.text.IsException) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_delay.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsException) refers to rtx_evflags.o(.text.IsException) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_evflags.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for isrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for EventFlagsClear
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for isrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_evflags.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_evflags.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsSet) refers to rtx_evflags.o(.text.atomic_set32) for atomic_set32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxObject) refers to rtx_evflags.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_set32) refers to rtx_evflags.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsClear) refers to rtx_evflags.o(.text.atomic_clr32) for atomic_clr32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_clr32) refers to rtx_evflags.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsException) refers to rtx_kernel.o(.text.IsException) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_kernel.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsPrivileged) refers to rtx_kernel.o(.text.IsPrivileged) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.osRtxKernelState) for osRtxKernelState
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_evr.o(.text.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelState) refers to rtx_kernel.o(.text.osRtxKernelState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.SVC_Setup) for SVC_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.SVC_Setup) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    rtx_kernel.o(.ARM.exidx.text.SVC_Setup) refers to rtx_kernel.o(.text.SVC_Setup) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.KernelBlock) for KernelBlock
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelBlock) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.GetPendSV) for GetPendSV
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.ClrPendSV) for ClrPendSV
    rtx_kernel.o(.ARM.exidx.text.KernelBlock) refers to rtx_kernel.o(.text.KernelBlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.GetPendSV) refers to rtx_kernel.o(.text.GetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.ClrPendSV) refers to rtx_kernel.o(.text.ClrPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.KernelUnblock) for KernelUnblock
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.text.SetPendSV) for SetPendSV
    rtx_kernel.o(.text.KernelUnblock) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.ARM.exidx.text.KernelUnblock) refers to rtx_kernel.o(.text.KernelUnblock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.SetPendSV) refers to rtx_kernel.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemHeadPtr) refers to rtx_memory.o(.text.MemHeadPtr) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemBlockPtr) refers to rtx_memory.o(.text.MemBlockPtr) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_link_get) for atomic_link_get
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_inc32) for atomic_inc32
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_get) refers to rtx_mempool.o(.text.atomic_link_get) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_inc32) refers to rtx_mempool.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_link_put) for atomic_link_put
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_dec32) for atomic_dec32
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_put) refers to rtx_mempool.o(.text.atomic_link_put) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_dec32) refers to rtx_mempool.o(.text.atomic_dec32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsException) refers to rtx_mempool.o(.text.IsException) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mempool.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for isrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for isrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxObject) refers to rtx_mempool.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsException) refers to rtx_msgqueue.o(.text.IsException) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_msgqueue.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for isrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for isrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxObject) refers to rtx_msgqueue.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.atomic_inc32) for atomic_inc32
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32) refers to rtx_msgqueue.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for atomic_dec32_nz
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_wr8) for atomic_wr8
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8) refers to rtx_msgqueue.o(.text.atomic_wr8) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxObject) refers to rtx_mutex.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsException) refers to rtx_mutex.o(.text.IsException) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mutex.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexId) refers to rtx_mutex.o(.text.osRtxMutexId) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsException) refers to rtx_semaphore.o(.text.IsException) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_semaphore.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for isrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for isrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxObject) refers to rtx_semaphore.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_system.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.isr_queue_get) for isr_queue_get
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMessageObject) for osRtxMessageObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxEventFlagsObject) for osRtxEventFlagsObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxSemaphoreObject) for osRtxSemaphoreObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for osRtxMemoryPoolObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_get) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.osRtxObject) for osRtxObject
    rtx_system.o(.ARM.exidx.text.isr_queue_get) refers to rtx_system.o(.text.isr_queue_get) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_system.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject) refers to rtx_system.o(.text.osRtxEventFlagsObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject) refers to rtx_system.o(.text.osRtxSemaphoreObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMessageObject) refers to rtx_system.o(.text.osRtxMessageObject) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.isr_queue_put) for isr_queue_put
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.SetPendSV) for SetPendSV
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_put) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.ARM.exidx.text.isr_queue_put) refers to rtx_system.o(.text.isr_queue_put) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.SetPendSV) refers to rtx_system.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_system.o(.text.atomic_dec16_nz) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_system.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lim) refers to rtx_system.o(.text.atomic_inc16_lim) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxObject) refers to rtx_system.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_system.o(.text.atomic_inc16_lt) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_system.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_thread.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxObject) refers to rtx_thread.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMutexObject) for osRtxMutexObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMutexObject) refers to rtx_thread.o(.text.osRtxMutexObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_thread.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadId) refers to rtx_thread.o(.text.osRtxThreadId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsException) refers to rtx_thread.o(.text.IsException) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for isrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_thread.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_thread.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadState) for osRtxThreadState
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadState) refers to rtx_thread.o(.text.osRtxThreadState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for osRtxThreadPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsSet) refers to rtx_thread.o(.text.atomic_set32) for atomic_set32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_set32) refers to rtx_thread.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for ThreadFlagsClear
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsClear) refers to rtx_thread.o(.text.atomic_clr32) for atomic_clr32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_clr32) refers to rtx_thread.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerUnlink) for TimerUnlink
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsException) refers to rtx_timer.o(.text.IsException) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_timer.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerUnlink) refers to rtx_timer.o(.text.TimerUnlink) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.osRtxTimerId) refers to rtx_timer.o(.text.osRtxTimerId) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_IRQHandler) refers to spi_stm32f2xx.o(.text.SPI_IRQHandler) for SPI_IRQHandler
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_IRQHandler) refers to spi_stm32f2xx.o(.text.SPI2_IRQHandler) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_IRQHandler) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.text.SPI_IRQHandler) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.1) for SPI2_Info.1.1
    spi_stm32f2xx.o(.text.SPI_IRQHandler) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.2) for SPI2_Info.1.2
    spi_stm32f2xx.o(.text.SPI_IRQHandler) refers to spi_stm32f2xx.o(.bss.SPI2_Info.0) for SPI2_Info.0
    spi_stm32f2xx.o(.text.SPI_IRQHandler) refers to spi_stm32f2xx.o(.text.SPI_RxData) for SPI_RxData
    spi_stm32f2xx.o(.text.SPI_IRQHandler) refers to spi_stm32f2xx.o(.text.SPI_TxData) for SPI_TxData
    spi_stm32f2xx.o(.text.SPI_IRQHandler) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.0) for SPI2_Info.1.0
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_IRQHandler) refers to spi_stm32f2xx.o(.text.SPI_IRQHandler) for [Anonymous Symbol]
    spi_stm32f2xx.o(.ARM.exidx.text.SPIX_GetVersion) refers to spi_stm32f2xx.o(.text.SPIX_GetVersion) for [Anonymous Symbol]
    spi_stm32f2xx.o(.ARM.exidx.text.SPIX_GetCapabilities) refers to spi_stm32f2xx.o(.text.SPIX_GetCapabilities) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_Initialize) refers to spi_stm32f2xx.o(.text.SPI_Initialize) for SPI_Initialize
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Initialize) refers to spi_stm32f2xx.o(.text.SPI2_Initialize) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_Uninitialize) refers to spi_stm32f2xx.o(.text.SPI_Uninitialize) for SPI_Uninitialize
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Uninitialize) refers to spi_stm32f2xx.o(.text.SPI2_Uninitialize) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_PowerControl) refers to spi_stm32f2xx.o(.text.SPI_PowerControl) for SPI_PowerControl
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_PowerControl) refers to spi_stm32f2xx.o(.text.SPI2_PowerControl) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_Send) refers to spi_stm32f2xx.o(.text.SPI_Send) for SPI_Send
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Send) refers to spi_stm32f2xx.o(.text.SPI2_Send) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_Receive) refers to spi_stm32f2xx.o(.text.SPI_Receive) for SPI_Receive
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Receive) refers to spi_stm32f2xx.o(.text.SPI2_Receive) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_Transfer) refers to spi_stm32f2xx.o(.text.SPI_Transfer) for SPI_Transfer
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Transfer) refers to spi_stm32f2xx.o(.text.SPI2_Transfer) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_GetDataCount) refers to spi_stm32f2xx.o(.text.SPI_GetDataCount) for SPI_GetDataCount
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_GetDataCount) refers to spi_stm32f2xx.o(.text.SPI2_GetDataCount) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_Control) refers to spi_stm32f2xx.o(.text.SPI_Control) for SPI_Control
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Control) refers to spi_stm32f2xx.o(.text.SPI2_Control) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI2_GetStatus) refers to spi_stm32f2xx.o(.text.SPI_GetStatus) for SPI_GetStatus
    spi_stm32f2xx.o(.ARM.exidx.text.SPI2_GetStatus) refers to spi_stm32f2xx.o(.text.SPI2_GetStatus) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_RxData) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_RxData) refers to spi_stm32f2xx.o(.text.SPI_RxData) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_TxData) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_TxData) refers to spi_stm32f2xx.o(.text.SPI_TxData) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_Initialize) refers to spi_stm32f2xx.o(.bss.SPI2_Info.2) for SPI2_Info.2
    spi_stm32f2xx.o(.text.SPI_Initialize) refers to spi_stm32f2xx.o(.bss.SPI2_Info.0) for SPI2_Info.0
    spi_stm32f2xx.o(.text.SPI_Initialize) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.0) for SPI2_Info.1.0
    spi_stm32f2xx.o(.text.SPI_Initialize) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.1) for SPI2_Info.1.1
    spi_stm32f2xx.o(.text.SPI_Initialize) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.2) for SPI2_Info.1.2
    spi_stm32f2xx.o(.text.SPI_Initialize) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.text.SPI_Initialize) refers to spi_stm32f2xx.o(.text.Enable_GPIO_Clock) for Enable_GPIO_Clock
    spi_stm32f2xx.o(.text.SPI_Initialize) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_Initialize) refers to spi_stm32f2xx.o(.text.SPI_Initialize) for [Anonymous Symbol]
    spi_stm32f2xx.o(.ARM.exidx.text.Enable_GPIO_Clock) refers to spi_stm32f2xx.o(.text.Enable_GPIO_Clock) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_Uninitialize) refers to spi_stm32f2xx.o(.bss.SPI2_Info.2) for SPI2_Info.2
    spi_stm32f2xx.o(.text.SPI_Uninitialize) refers to spi_stm32f2xx.o(.text.SPI_PowerControl) for SPI_PowerControl
    spi_stm32f2xx.o(.text.SPI_Uninitialize) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_Uninitialize) refers to spi_stm32f2xx.o(.text.SPI_Uninitialize) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.bss.SPI2_Info.2) for SPI2_Info.2
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.0) for SPI2_Info.1.0
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.text.SPI_Control) for SPI_Control
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.text.SPI_PeripheralReset) for SPI_PeripheralReset
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.text.Disable_SPI_Clock) for Disable_SPI_Clock
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.1) for SPI2_Info.1.1
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.2) for SPI2_Info.1.2
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.text.Enable_SPI_Clock) for Enable_SPI_Clock
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    spi_stm32f2xx.o(.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_PowerControl) refers to spi_stm32f2xx.o(.text.SPI_PowerControl) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_Control) refers to spi_stm32f2xx.o(.bss.SPI2_Info.2) for SPI2_Info.2
    spi_stm32f2xx.o(.text.SPI_Control) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.0) for SPI2_Info.1.0
    spi_stm32f2xx.o(.text.SPI_Control) refers to spi_stm32f2xx.o(.text.SPI_PeripheralReset) for SPI_PeripheralReset
    spi_stm32f2xx.o(.text.SPI_Control) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.text.SPI_Control) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for HAL_RCC_GetPCLK1Freq
    spi_stm32f2xx.o(.text.SPI_Control) refers to spi_stm32f2xx.o(.bss.SPI2_Info.3) for SPI2_Info.3
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_Control) refers to spi_stm32f2xx.o(.text.SPI_Control) for [Anonymous Symbol]
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_PeripheralReset) refers to spi_stm32f2xx.o(.text.SPI_PeripheralReset) for [Anonymous Symbol]
    spi_stm32f2xx.o(.ARM.exidx.text.Disable_SPI_Clock) refers to spi_stm32f2xx.o(.text.Disable_SPI_Clock) for [Anonymous Symbol]
    spi_stm32f2xx.o(.ARM.exidx.text.Enable_SPI_Clock) refers to spi_stm32f2xx.o(.text.Enable_SPI_Clock) for [Anonymous Symbol]
    spi_stm32f2xx.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to spi_stm32f2xx.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    spi_stm32f2xx.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to spi_stm32f2xx.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_Send) refers to spi_stm32f2xx.o(.bss.SPI2_Info.2) for SPI2_Info.2
    spi_stm32f2xx.o(.text.SPI_Send) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.0) for SPI2_Info.1.0
    spi_stm32f2xx.o(.text.SPI_Send) refers to spi_stm32f2xx.o(.bss.SPI2_Info.3) for SPI2_Info.3
    spi_stm32f2xx.o(.text.SPI_Send) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.1) for SPI2_Info.1.1
    spi_stm32f2xx.o(.text.SPI_Send) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.2) for SPI2_Info.1.2
    spi_stm32f2xx.o(.text.SPI_Send) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.text.SPI_Send) refers to spi_stm32f2xx.o(.text.SPI_TxData) for SPI_TxData
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_Send) refers to spi_stm32f2xx.o(.text.SPI_Send) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_Receive) refers to spi_stm32f2xx.o(.bss.SPI2_Info.2) for SPI2_Info.2
    spi_stm32f2xx.o(.text.SPI_Receive) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.0) for SPI2_Info.1.0
    spi_stm32f2xx.o(.text.SPI_Receive) refers to spi_stm32f2xx.o(.bss.SPI2_Info.3) for SPI2_Info.3
    spi_stm32f2xx.o(.text.SPI_Receive) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.1) for SPI2_Info.1.1
    spi_stm32f2xx.o(.text.SPI_Receive) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.2) for SPI2_Info.1.2
    spi_stm32f2xx.o(.text.SPI_Receive) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.text.SPI_Receive) refers to spi_stm32f2xx.o(.text.SPI_TxData) for SPI_TxData
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_Receive) refers to spi_stm32f2xx.o(.text.SPI_Receive) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_Transfer) refers to spi_stm32f2xx.o(.bss.SPI2_Info.2) for SPI2_Info.2
    spi_stm32f2xx.o(.text.SPI_Transfer) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.0) for SPI2_Info.1.0
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_Transfer) refers to spi_stm32f2xx.o(.text.SPI_Transfer) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_GetDataCount) refers to spi_stm32f2xx.o(.bss.SPI2_TransferInfo) for SPI2_TransferInfo
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_GetDataCount) refers to spi_stm32f2xx.o(.text.SPI_GetDataCount) for [Anonymous Symbol]
    spi_stm32f2xx.o(.text.SPI_GetStatus) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.0) for SPI2_Info.1.0
    spi_stm32f2xx.o(.text.SPI_GetStatus) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.1) for SPI2_Info.1.1
    spi_stm32f2xx.o(.text.SPI_GetStatus) refers to spi_stm32f2xx.o(.bss.SPI2_Info.1.2) for SPI2_Info.1.2
    spi_stm32f2xx.o(.ARM.exidx.text.SPI_GetStatus) refers to spi_stm32f2xx.o(.text.SPI_GetStatus) for [Anonymous Symbol]
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPIX_GetVersion) for SPIX_GetVersion
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPIX_GetCapabilities) for SPIX_GetCapabilities
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_Initialize) for SPI2_Initialize
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_Uninitialize) for SPI2_Uninitialize
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_PowerControl) for SPI2_PowerControl
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_Send) for SPI2_Send
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_Receive) for SPI2_Receive
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_Transfer) for SPI2_Transfer
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_GetDataCount) for SPI2_GetDataCount
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_Control) for SPI2_Control
    spi_stm32f2xx.o(.rodata.Driver_SPI2) refers to spi_stm32f2xx.o(.text.SPI2_GetStatus) for SPI2_GetStatus
    retarget_io.o(.ARM.exidx.text.ITM_SendChar) refers to retarget_io.o(.text.ITM_SendChar) for [Anonymous Symbol]
    retarget_io.o(.text.ITM_ReceiveChar) refers to retarget_io.o(.data.ITM_RxBuffer) for ITM_RxBuffer
    retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar) refers to retarget_io.o(.text.ITM_ReceiveChar) for [Anonymous Symbol]
    retarget_io.o(.text._sys_open) refers to strcmpv7m.o(.text) for strcmp
    retarget_io.o(.ARM.exidx.text._sys_open) refers to retarget_io.o(.text._sys_open) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_close) refers to retarget_io.o(.text._sys_close) for [Anonymous Symbol]
    retarget_io.o(.text._sys_write) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.text._sys_write) refers to retarget_io.o(.text.stderr_putchar) for stderr_putchar
    retarget_io.o(.ARM.exidx.text._sys_write) refers to retarget_io.o(.text._sys_write) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.text.ITM_SendChar) for ITM_SendChar
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.text.stderr_putchar) refers to retarget_io.o(.text.ITM_SendChar) for ITM_SendChar
    retarget_io.o(.ARM.exidx.text.stderr_putchar) refers to retarget_io.o(.text.stderr_putchar) for [Anonymous Symbol]
    retarget_io.o(.text._sys_read) refers to retarget_io.o(.text.stdin_getchar) for stdin_getchar
    retarget_io.o(.ARM.exidx.text._sys_read) refers to retarget_io.o(.text._sys_read) for [Anonymous Symbol]
    retarget_io.o(.text.stdin_getchar) refers to retarget_io.o(.text.ITM_ReceiveChar) for ITM_ReceiveChar
    retarget_io.o(.ARM.exidx.text.stdin_getchar) refers to retarget_io.o(.text.stdin_getchar) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_istty) refers to retarget_io.o(.text._sys_istty) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_seek) refers to retarget_io.o(.text._sys_seek) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_flen) refers to retarget_io.o(.text._sys_flen) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_Init) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f2xx_hal.o(.text.HAL_Init) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f2xx_hal.o(.text.HAL_Init) refers to stm32f2xx_hal.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f2xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_InitTick) refers to stm32f2xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f2xx_hal.o(.text.HAL_InitTick) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal.o(.text.HAL_InitTick) refers to stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f2xx_hal.o(.text.HAL_InitTick) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f2xx_hal.o(.text.HAL_InitTick) refers to stm32f2xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f2xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f2xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_DeInit) refers to stm32f2xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f2xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f2xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_IncTick) refers to stm32f2xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f2xx_hal.o(.text.HAL_IncTick) refers to stm32f2xx_hal.o(.bss.uwTick) for uwTick
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f2xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_GetTick) refers to stm32f2xx_hal.o(.bss.uwTick) for uwTick
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f2xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f2xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f2xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f2xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f2xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f2xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f2xx_hal.o(.text.HAL_SetTickFreq) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f2xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f2xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f2xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f2xx_hal.o(.text.HAL_Delay) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal.o(.text.HAL_Delay) refers to stm32f2xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f2xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f2xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f2xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f2xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f2xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f2xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f2xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f2xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f2xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f2xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f2xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f2xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f2xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f2xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f2xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f2xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f2xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f2xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f2xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f2xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f2xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f2xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f2xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f2xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f2xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f2xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f2xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.text.HAL_DMA_Init) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f2xx_hal_dma.o(.text.DMA_CheckFifoParam) for DMA_CheckFifoParam
    stm32f2xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f2xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam) refers to stm32f2xx_hal_dma.o(.text.DMA_CheckFifoParam) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift) refers to stm32f2xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32f2xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32f2xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig) refers to stm32f2xx_hal_dma.o(.text.DMA_SetConfig) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32f2xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.text.HAL_DMA_IRQHandler) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32f2xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to stm32f2xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f2xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart) refers to stm32f2xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) for [Anonymous Symbol]
    stm32f2xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig) refers to stm32f2xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for [Anonymous Symbol]
    stm32f2xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f2xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f2xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f2xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) for [Anonymous Symbol]
    stm32f2xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory) refers to stm32f2xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory) for [Anonymous Symbol]
    stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f2xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f2xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f2xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f2xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f2xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f2xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f2xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f2xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f2xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f2xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f2xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Init) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_MspInit) for HAL_SPI_MspInit
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Init) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Init) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspInit) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_MspInit) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_DeInit) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_MspDeInit) for HAL_SPI_MspDeInit
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DeInit) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_DeInit) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_MspDeInit) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) refers to stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTxTransaction) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_WaitFlagStateUntilTimeout) refers to stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_EndRxTransaction) refers to stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTransaction) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTransaction) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_TxISR_16BIT) for SPI_TxISR_16BIT
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_TxISR_8BIT) for SPI_TxISR_8BIT
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_IT) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_TxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_TxISR_16BIT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_TxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_TxISR_8BIT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) for HAL_SPI_TransmitReceive_IT
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BIT) for SPI_RxISR_16BIT
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BIT) for SPI_RxISR_8BIT
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_IT) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_IT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) for SPI_2linesRxISR_8BIT
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) for SPI_2linesRxISR_16BIT
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) for SPI_2linesTxISR_16BIT
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) for SPI_2linesTxISR_8BIT
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_IT) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BITCRC) for SPI_RxISR_16BITCRC
    stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BIT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BITCRC) for SPI_RxISR_8BITCRC
    stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BIT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BITCRC) for SPI_2linesRxISR_16BITCRC
    stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_16BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BITCRC) for SPI_2linesRxISR_8BITCRC
    stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_8BIT) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) for SPI_DMAHalfTransmitCplt
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMATransmitCplt) for SPI_DMATransmitCplt
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_DMA) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback) for HAL_SPI_TxHalfCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_DMATransmitCplt) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMAError) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAError) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAError) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) for HAL_SPI_TransmitReceive_DMA
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_DMA) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) for SPI_DMAHalfTransmitReceiveCplt
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) for SPI_DMATransmitReceiveCplt
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback) for HAL_SPI_RxHalfCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback) for HAL_SPI_TxRxHalfCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitReceiveCplt) refers to stm32f2xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f2xx_hal_spi.o(.text.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f2xx_hal_spi.o(.text.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_AbortTx_ISR) refers to stm32f2xx_hal_spi.o(.text.SPI_AbortTx_ISR) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_AbortRx_ISR) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_AbortRx_ISR) refers to stm32f2xx_hal_spi.o(.text.SPI_AbortRx_ISR) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_DMATxAbortCallback) for SPI_DMATxAbortCallback
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f2xx_hal_spi.o(.text.SPI_DMARxAbortCallback) for SPI_DMARxAbortCallback
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort_IT) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMATxAbortCallback) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_spi.o(.text.SPI_DMATxAbortCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMATxAbortCallback) refers to stm32f2xx_hal_spi.o(.text.SPI_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f2xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMARxAbortCallback) refers to stm32f2xx_hal_spi.o(.text.SPI_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_AbortCpltCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAPause) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_DMAPause) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAResume) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_DMAResume) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_DMAStop) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAStop) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_DMAStop) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAAbortOnError) for SPI_DMAAbortOnError
    stm32f2xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f2xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_IRQHandler) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_IRQHandler) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_DMAAbortOnError) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAAbortOnError) refers to stm32f2xx_hal_spi.o(.text.SPI_DMAAbortOnError) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_ErrorCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxCpltCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxCpltCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxCpltCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxHalfCpltCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxHalfCpltCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxHalfCpltCallback) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetState) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_GetState) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetError) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_GetError) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BITCRC) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BITCRC) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BITCRC) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRxTx_ISR) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BITCRC) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BITCRC) refers to stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BITCRC) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BITCRC) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BITCRC) refers to stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BITCRC) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRx_ISR) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BITCRC) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BITCRC) refers to stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BITCRC) for [Anonymous Symbol]
    stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f2xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_CloseTx_ISR) refers to stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Init) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_MspInit) for HAL_SRAM_MspInit
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Init) for FSMC_NORSRAM_Init
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Timing_Init) for FSMC_NORSRAM_Timing_Init
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Extended_Timing_Init) for FSMC_NORSRAM_Extended_Timing_Init
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Init) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Init) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_MspInit) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_MspInit) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_DeInit) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_MspDeInit) for HAL_SRAM_MspDeInit
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_DeInit) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_DeInit) for FSMC_NORSRAM_DeInit
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_DeInit) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_DeInit) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_MspDeInit) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_MspDeInit) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_DMA_XferCpltCallback) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_DMA_XferCpltCallback) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_DMA_XferErrorCallback) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_DMA_XferErrorCallback) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Read_8b) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_8b) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Write_8b) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_8b) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Read_16b) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_16b) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Write_16b) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_16b) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Read_32b) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_32b) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Write_32b) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_32b) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_DMA) refers to stm32f2xx_hal_sram.o(.text.SRAM_DMACpltProt) for SRAM_DMACpltProt
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_DMA) refers to stm32f2xx_hal_sram.o(.text.SRAM_DMACplt) for SRAM_DMACplt
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_DMA) refers to stm32f2xx_hal_sram.o(.text.SRAM_DMAError) for SRAM_DMAError
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_DMA) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Read_DMA) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_DMA) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.SRAM_DMACplt) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_DMA_XferCpltCallback) for HAL_SRAM_DMA_XferCpltCallback
    stm32f2xx_hal_sram.o(.ARM.exidx.text.SRAM_DMACplt) refers to stm32f2xx_hal_sram.o(.text.SRAM_DMACplt) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.SRAM_DMACpltProt) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_DMA_XferCpltCallback) for HAL_SRAM_DMA_XferCpltCallback
    stm32f2xx_hal_sram.o(.ARM.exidx.text.SRAM_DMACpltProt) refers to stm32f2xx_hal_sram.o(.text.SRAM_DMACpltProt) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.SRAM_DMAError) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_DMA_XferErrorCallback) for HAL_SRAM_DMA_XferErrorCallback
    stm32f2xx_hal_sram.o(.ARM.exidx.text.SRAM_DMAError) refers to stm32f2xx_hal_sram.o(.text.SRAM_DMAError) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_DMA) refers to stm32f2xx_hal_sram.o(.text.SRAM_DMACplt) for SRAM_DMACplt
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_DMA) refers to stm32f2xx_hal_sram.o(.text.SRAM_DMAError) for SRAM_DMAError
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_DMA) refers to stm32f2xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Write_DMA) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_DMA) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_WriteOperation_Enable) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_WriteOperation_Enable) for FSMC_NORSRAM_WriteOperation_Enable
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_WriteOperation_Enable) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_WriteOperation_Enable) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.text.HAL_SRAM_WriteOperation_Disable) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_WriteOperation_Disable) for FSMC_NORSRAM_WriteOperation_Disable
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_WriteOperation_Disable) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_WriteOperation_Disable) for [Anonymous Symbol]
    stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_GetState) refers to stm32f2xx_hal_sram.o(.text.HAL_SRAM_GetState) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_DeInit) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_DeInit) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_Timing_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Timing_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_Extended_Timing_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Extended_Timing_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_WriteOperation_Enable) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_WriteOperation_Enable) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_WriteOperation_Disable) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_WriteOperation_Disable) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_CommonSpace_Timing_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_CommonSpace_Timing_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_AttributeSpace_Timing_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_AttributeSpace_Timing_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_DeInit) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_DeInit) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_ECC_Enable) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_ECC_Enable) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_ECC_Disable) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_ECC_Disable) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_GetECC) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_GetECC) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_GetECC) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_CommonSpace_Timing_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_CommonSpace_Timing_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_AttributeSpace_Timing_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_AttributeSpace_Timing_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_IOSpace_Timing_Init) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_IOSpace_Timing_Init) for [Anonymous Symbol]
    stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_DeInit) refers to stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_DeInit) for [Anonymous Symbol]
    startup_stm32f207xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f207xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f207xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f207xx.o(RESET) refers to startup_stm32f207xx.o(STACK) for __initial_sp
    startup_stm32f207xx.o(RESET) refers to startup_stm32f207xx.o(.text) for Reset_Handler
    startup_stm32f207xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f207xx.o(RESET) refers to spi_stm32f2xx.o(.text.SPI2_IRQHandler) for SPI2_IRQHandler
    startup_stm32f207xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f207xx.o(.text) refers to system_stm32f2xx.o(.text.SystemInit) for SystemInit
    startup_stm32f207xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f207xx.o(.text) refers to startup_stm32f207xx.o(HEAP) for Heap_Mem
    startup_stm32f207xx.o(.text) refers to startup_stm32f207xx.o(STACK) for Stack_Mem
    system_stm32f2xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f2xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f2xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f2xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f2xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f2xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f2xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f2xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    __2fprintf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    noretval__2fprintf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    fwrite.o(.text) refers to fputc_locked.o(.text) for fputc
    puts.o(.text) refers to fputc_locked.o(.text) for fputc
    puts.o(.text) refers to stdio_streams.o(.bss) for __stdout
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    _printf_char_file.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file.o(.text) refers to ferror_locked.o(.text) for ferror
    _printf_char_file.o(.text) refers to fputc_locked.o(.text) for fputc
    fputc.o(i.fputc) refers to flsbuf.o(.text) for __flsbuf_byte
    initio.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000024) for __rt_lib_init_stdio_2
    initio.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio.o(.text) refers to fopen_locked.o(.text) for freopen
    initio.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio.o(.text) refers to h1_free_threads.o(.text) for free
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fputc_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000024) for __rt_lib_init_stdio_2
    initio_locked.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio_locked.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    initio_locked.o(.text) refers to fopen_locked.o(.text) for freopen
    initio_locked.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio_locked.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to h1_free_threads.o(.text) for free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_free_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free_threads.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc_threads.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free_threads.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc_threads.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    _printf_char_common.o(.text) refers to __printf.o(.text) for __printf
    flsbuf.o(.text) refers to stdio.o(.text) for _deferredlazyseek
    flsbuf.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    flsbuf.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    flsbuf.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    streamlock.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    fopen.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen.o(.text) refers to fseek.o(.text) for _fseek
    fopen.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fclose.o(.text) refers to stdio.o(.text) for _fflush
    fclose.o(.text) refers to retarget_io.o(.text._sys_close) for _sys_close
    fclose.o(.text) refers to h1_free_threads.o(.text) for free
    fclose.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    ferror_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    ferror_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen_locked.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen_locked.o(.text) refers to fseek.o(.text) for _fseek
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen_locked.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fopen_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    defsig_rtred_outer.o(.text) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig_rtred_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtred_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers (Weak) to initio_locked.o(.text) for _initio
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) refers (Weak) to initio_locked.o(.text) for _terminateio
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    flsbuf_fwide.o(.text) refers to flsbuf.o(.text) for __flsbuf
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f207xx.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_threads.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_threads.o(.text) for __Heap_Initialize
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    h1_alloc.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    _printf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    _printf_char_file_locked.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    _printf_char_file_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fseek.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    fseek.o(.text) refers to ftell.o(.text) for _ftell_internal
    fseek.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    fseek.o(.text) refers to stdio.o(.text) for _seterr
    stdio.o(.text) refers to retarget_io.o(.text._sys_seek) for _sys_seek
    stdio.o(.text) refers to retarget_io.o(.text._sys_write) for _sys_write
    fwritefast.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    puts_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    puts_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    puts_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    puts_locked.o(.text) refers to stdio_streams.o(.bss) for __stdout
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fwritefast_locked.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast_locked.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fwritefast_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    assert_stdio.o(.text) refers to fputs_locked.o(.text) for fputs
    assert_stdio.o(.text) refers to fflush_locked.o(.text) for fflush
    assert_stdio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_threads.o(.text) for free
    h1_init_threads.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    fflush.o(.text) refers to stdio.o(.text) for _fflush
    fflush.o(.text) refers to fseek.o(.text) for _fseek
    fflush.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fputs.o(.text) refers to fputc_locked.o(.text) for fputc
    ftell.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fputs_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers to stdio.o(.text) for _fflush
    fflush_locked.o(.text) refers to fseek.o(.text) for _fseek
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(.text.__user_perthread_libspace) for __user_perthread_libspace
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_threads.o(.text) for __Heap_Finalize
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    h1_final_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing led.o(.text), (0 bytes).
    Removing led.o(.text.LED_set_amount), (12 bytes).
    Removing led.o(.ARM.exidx.text.LED_set_amount), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_init), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_spi_callback), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_spi_thread), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_set_pile_colors), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_start_frame), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_end_frame), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_clear), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_set_color), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_set_colors), (8 bytes).
    Removing led.o(.ARM.exidx.text.LED_send), (8 bytes).
    Removing glcd_fonts.o(.text), (0 bytes).
    Removing glcd_fonts.o(.rodata.Font_6x8_h), (896 bytes).
    Removing glcd_fonts.o(.rodata.GLCD_Font_6x8), (16 bytes).
    Removing glcd_fonts.o(.rodata.Font_16x24_h), (5376 bytes).
    Removing glcd_fonts.o(.rodata.GLCD_Font_16x24), (16 bytes).
    Removing glcd_mcbstm32f200.o(.text), (0 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_Initialize), (1672 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_Initialize), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.rd_reg), (14 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.rd_reg), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.wr_reg), (16 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.wr_reg), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_Uninitialize), (80 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_Uninitialize), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_SetForegroundColor), (16 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_SetForegroundColor), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_SetBackgroundColor), (16 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_SetBackgroundColor), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_ClearScreen), (50 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_ClearScreen), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_SetWindow), (176 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_SetWindow), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.wr_cmd), (8 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.wr_cmd), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.wr_dat_only), (10 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.wr_dat_only), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_SetFont), (16 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_SetFont), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_DrawPixel), (138 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawPixel), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.wr_dat), (10 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.wr_dat), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_DrawHLine), (44 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawHLine), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_DrawVLine), (48 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawVLine), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_DrawRectangle), (52 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawRectangle), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_DrawChar), (198 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawChar), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_DrawString), (54 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawString), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_DrawBargraph), (114 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawBargraph), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_DrawBitmap), (94 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_DrawBitmap), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_VScroll), (6 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_VScroll), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_FrameBufferAccess), (42 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_FrameBufferAccess), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.GLCD_FrameBufferAddress), (8 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.GLCD_FrameBufferAddress), (8 bytes).
    Removing glcd_mcbstm32f200.o(.text.rd_dat), (10 bytes).
    Removing glcd_mcbstm32f200.o(.ARM.exidx.text.rd_dat), (8 bytes).
    Removing glcd_mcbstm32f200.o(.bss.hsram4), (68 bytes).
    Removing glcd_mcbstm32f200.o(.bss.Himax), (1 bytes).
    Removing glcd_mcbstm32f200.o(.bss.foreground_color), (2 bytes).
    Removing glcd_mcbstm32f200.o(.data.background_color), (2 bytes).
    Removing glcd_mcbstm32f200.o(.bss.active_font), (4 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.text.osDelay), (50 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.IsException), (12 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_delay.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (50 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelay), (52 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (64 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (50 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.IsException), (12 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_evflags.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (44 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsSet), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (62 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (42 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (66 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsWait), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (140 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsCheck), (62 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_all), (38 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_any), (34 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (42 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsId), (2 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsSet), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxObject), (2 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_set32), (22 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (154 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsClear), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_clr32), (22 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (168 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (126 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetState), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetTickFreq), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminate), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelay), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayStarted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStart), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStarted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquire), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreAcquired), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreRelease), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreReleased), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNew), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (2 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (62 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsPrivileged), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (42 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (68 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.KernelBlock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelBlock), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (38 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.GetPendSV), (18 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.ClrPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.ClrPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (106 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.KernelUnblock), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelUnblock), (8 bytes).
    Removing rtx_kernel.o(.text.SetPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemHeadPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemBlockPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_get), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_put), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_dec32), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (58 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.IsException), (12 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mempool.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (44 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolAlloc), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolFree), (84 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (38 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (50 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (358 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxObject), (2 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (42 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolId), (2 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (120 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (120 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (138 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (58 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (44 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (38 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (50 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (42 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (220 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (140 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (44 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (42 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexId), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (46 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreNew), (58 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.IsException), (12 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_semaphore.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (44 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreAcquire), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.isrRtxSemaphoreAcquire), (70 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreRelease), (42 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.isrRtxSemaphoreRelease), (80 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (38 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (42 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (52 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreNew), (176 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphorePostProcess), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.text.SemaphoreTokenDecrement), (16 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxObject), (2 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_semaphore.o(.text.atomic_dec16_nz), (26 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (42 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxSemaphoreId), (2 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreAcquire), (126 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_semaphore.o(.text.SemaphoreTokenIncrement), (26 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.text.atomic_inc16_lt), (30 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreRelease), (114 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (126 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_get), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMessageObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_put), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lim), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMutexObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (50 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (38 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadState), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (42 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPriority), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (170 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (140 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (212 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (146 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsClear), (10 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.atomic_clr32), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (68 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.IsException), (12 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_timer.o(.text.IsIrqMasked), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (52 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (44 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (52 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerUnlink), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (174 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerId), (2 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerId), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (106 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (46 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (38 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (98 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing spi_stm32f2xx.o(.text), (0 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_IRQHandler), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_IRQHandler), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPIX_GetVersion), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPIX_GetCapabilities), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Initialize), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Uninitialize), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_PowerControl), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Send), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Receive), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Transfer), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_GetDataCount), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_Control), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI2_GetStatus), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_RxData), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_TxData), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_Initialize), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.Enable_GPIO_Clock), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_Uninitialize), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_PowerControl), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_Control), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_PeripheralReset), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.Disable_SPI_Clock), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.Enable_SPI_Clock), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_Send), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_Receive), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_Transfer), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_GetDataCount), (8 bytes).
    Removing spi_stm32f2xx.o(.ARM.exidx.text.SPI_GetStatus), (8 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_SendChar), (8 bytes).
    Removing retarget_io.o(.text.ITM_ReceiveChar), (32 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_open), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_close), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_write), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stderr_putchar), (8 bytes).
    Removing retarget_io.o(.text._sys_read), (40 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_read), (8 bytes).
    Removing retarget_io.o(.text.stdin_getchar), (14 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdin_getchar), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_istty), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_seek), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_flen), (8 bytes).
    Removing retarget_io.o(.data.ITM_RxBuffer), (4 bytes).
    Removing stm32f2xx_hal.o(.text), (0 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_InitTick), (80 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_DeInit), (44 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_SetTickFreq), (46 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_Delay), (46 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetHalVersion), (10 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_EnableCompensationCell), (14 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_DisableCompensationCell), (14 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f2xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f2xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f2xx_hal.o(.data.uwTickFreq), (1 bytes).
    Removing stm32f2xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32f2xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriority), (30 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping), (16 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_SetPriority), (34 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.NVIC_EncodePriority), (44 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_EnableIRQ), (32 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_SystemReset), (36 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.SysTick_Config), (46 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_MPU_Disable), (26 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_MPU_Enable), (32 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (94 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (24 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.NVIC_DecodePriority), (56 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_GetPriority), (34 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (32 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (36 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (32 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.__NVIC_GetActive), (36 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (24 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f2xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f2xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text), (0 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_Init), (206 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.DMA_CheckFifoParam), (80 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift), (60 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_DeInit), (90 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_Start), (66 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.DMA_SetConfig), (48 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_Start_IT), (98 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort), (128 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (36 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (340 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (396 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (78 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (104 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_GetState), (6 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32f2xx_hal_dma.o(.text.HAL_DMA_GetError), (4 bytes).
    Removing stm32f2xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart), (96 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart), (8 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig), (30 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig), (8 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT), (1456 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT), (8 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory), (20 bytes).
    Removing stm32f2xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory), (8 bytes).
    Removing stm32f2xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f2xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (10 bytes).
    Removing stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f2xx_hal_gpio.o(.text.HAL_GPIO_WritePin), (10 bytes).
    Removing stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f2xx_hal_gpio.o(.text.HAL_GPIO_TogglePin), (16 bytes).
    Removing stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f2xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (40 bytes).
    Removing stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f2xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler), (26 bytes).
    Removing stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f2xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32f2xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (12 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (12 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (128 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (12 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (16 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (18 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (30 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (60 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (30 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f2xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f2xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (54 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (54 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (12 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (12 bytes).
    Removing stm32f2xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_DeInit), (258 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (158 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq), (34 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (148 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (62 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (28 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f2xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f2xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (334 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (50 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (104 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (52 bytes).
    Removing stm32f2xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text), (0 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Init), (196 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Init), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_MspInit), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspInit), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_DeInit), (48 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DeInit), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_MspDeInit), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit), (422 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_EndRxTxTransaction), (38 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTxTransaction), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive), (498 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive), (638 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout), (224 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_WaitFlagStateUntilTimeout), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_EndRxTransaction), (72 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTransaction), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_IT), (180 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_IT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_TxISR_16BIT), (50 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_16BIT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_TxISR_8BIT), (54 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_8BIT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_IT), (220 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_IT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT), (238 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_IT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BIT), (76 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BIT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BIT), (80 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BIT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT), (68 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BIT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT), (74 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_16BIT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT), (72 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BIT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT), (78 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_8BIT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA), (232 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_DMA), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt), (10 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitCplt), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMATransmitCplt), (112 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitCplt), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMAError), (34 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAError), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Receive_DMA), (268 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_DMA), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA), (314 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_DMA), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt), (10 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfReceiveCplt), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMAReceiveCplt), (180 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAReceiveCplt), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt), (10 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitReceiveCplt), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt), (162 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitReceiveCplt), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort), (310 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_AbortTx_ISR), (26 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_AbortTx_ISR), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_AbortRx_ISR), (98 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_AbortRx_ISR), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_Abort_IT), (338 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort_IT), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMATxAbortCallback), (142 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMATxAbortCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMARxAbortCallback), (120 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMARxAbortCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_AbortCpltCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_DMAPause), (32 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAPause), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_DMAResume), (32 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAResume), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_DMAStop), (68 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAStop), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_IRQHandler), (262 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_IRQHandler), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_DMAAbortOnError), (16 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_DMAAbortOnError), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_ErrorCallback), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_ErrorCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxCpltCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxCpltCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxCpltCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxHalfCpltCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxHalfCpltCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback), (2 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxHalfCpltCallback), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_GetState), (6 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetState), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.HAL_SPI_GetError), (4 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetError), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_8BITCRC), (44 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BITCRC), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_CloseRxTx_ISR), (198 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRxTx_ISR), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_2linesRxISR_16BITCRC), (32 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BITCRC), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_RxISR_8BITCRC), (30 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BITCRC), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_CloseRx_ISR), (110 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRx_ISR), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_RxISR_16BITCRC), (32 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BITCRC), (8 bytes).
    Removing stm32f2xx_hal_spi.o(.text.SPI_CloseTx_ISR), (150 bytes).
    Removing stm32f2xx_hal_spi.o(.ARM.exidx.text.SPI_CloseTx_ISR), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text), (0 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Init), (106 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Init), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_MspInit), (2 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_MspInit), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_DeInit), (30 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_DeInit), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_MspDeInit), (2 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_MspDeInit), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_DMA_XferCpltCallback), (2 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_DMA_XferCpltCallback), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_DMA_XferErrorCallback), (2 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_DMA_XferErrorCallback), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_8b), (80 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Read_8b), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_8b), (76 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Write_8b), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_16b), (114 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Read_16b), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_16b), (126 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Write_16b), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_32b), (80 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Read_32b), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_32b), (76 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Write_32b), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Read_DMA), (92 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Read_DMA), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.SRAM_DMACplt), (26 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.SRAM_DMACplt), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.SRAM_DMACpltProt), (26 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.SRAM_DMACpltProt), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.SRAM_DMAError), (26 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.SRAM_DMAError), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_Write_DMA), (80 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_Write_DMA), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_WriteOperation_Enable), (60 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_WriteOperation_Enable), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_WriteOperation_Disable), (62 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_WriteOperation_Disable), (8 bytes).
    Removing stm32f2xx_hal_sram.o(.text.HAL_SRAM_GetState), (6 bytes).
    Removing stm32f2xx_hal_sram.o(.ARM.exidx.text.HAL_SRAM_GetState), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text), (0 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Init), (128 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_DeInit), (48 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_DeInit), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Timing_Init), (68 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_Timing_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_Extended_Timing_Init), (68 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_Extended_Timing_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_WriteOperation_Enable), (18 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_WriteOperation_Enable), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NORSRAM_WriteOperation_Disable), (18 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NORSRAM_WriteOperation_Disable), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_Init), (62 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_CommonSpace_Timing_Init), (42 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_CommonSpace_Timing_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_AttributeSpace_Timing_Init), (42 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_AttributeSpace_Timing_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_DeInit), (66 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_DeInit), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_ECC_Enable), (20 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_ECC_Enable), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_ECC_Disable), (20 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_ECC_Disable), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_NAND_GetECC), (102 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_NAND_GetECC), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_Init), (44 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_CommonSpace_Timing_Init), (30 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_CommonSpace_Timing_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_AttributeSpace_Timing_Init), (30 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_AttributeSpace_Timing_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_IOSpace_Timing_Init), (30 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_IOSpace_Timing_Init), (8 bytes).
    Removing stm32f2xx_ll_fsmc.o(.text.FSMC_PCCARD_DeInit), (32 bytes).
    Removing stm32f2xx_ll_fsmc.o(.ARM.exidx.text.FSMC_PCCARD_DeInit), (8 bytes).
    Removing system_stm32f2xx.o(.text), (0 bytes).
    Removing system_stm32f2xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f2xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).

1392 unused section(s) (total 41523 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert_stdio.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2fprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2fprintf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file_locked.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_u.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwrite.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio_streams.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flsbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  streamlock.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fseek.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  puts_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ftell.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush_locked.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/wchar.c                          0x00000000   Number         0  flsbuf_fwide.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    FPU_USED                                 0x00000000   Number         0  irq_armv7m.o ABSOLUTE
    GLCD_Fonts.c                             0x00000000   Number         0  glcd_fonts.o ABSOLUTE
    GLCD_MCBSTM32F200.c                      0x00000000   Number         0  glcd_mcbstm32f200.o ABSOLUTE
    RTE/Device/STM32F207IGHx/startup_stm32f207xx.s 0x00000000   Number         0  startup_stm32f207xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    SPI_STM32F2xx.c                          0x00000000   Number         0  spi_stm32f2xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    led.c                                    0x00000000   Number         0  led.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32f2xx_hal.c                          0x00000000   Number         0  stm32f2xx_hal.o ABSOLUTE
    stm32f2xx_hal_cortex.c                   0x00000000   Number         0  stm32f2xx_hal_cortex.o ABSOLUTE
    stm32f2xx_hal_dma.c                      0x00000000   Number         0  stm32f2xx_hal_dma.o ABSOLUTE
    stm32f2xx_hal_dma_ex.c                   0x00000000   Number         0  stm32f2xx_hal_dma_ex.o ABSOLUTE
    stm32f2xx_hal_gpio.c                     0x00000000   Number         0  stm32f2xx_hal_gpio.o ABSOLUTE
    stm32f2xx_hal_pwr.c                      0x00000000   Number         0  stm32f2xx_hal_pwr.o ABSOLUTE
    stm32f2xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f2xx_hal_pwr_ex.o ABSOLUTE
    stm32f2xx_hal_rcc.c                      0x00000000   Number         0  stm32f2xx_hal_rcc.o ABSOLUTE
    stm32f2xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f2xx_hal_rcc_ex.o ABSOLUTE
    stm32f2xx_hal_spi.c                      0x00000000   Number         0  stm32f2xx_hal_spi.o ABSOLUTE
    stm32f2xx_hal_sram.c                     0x00000000   Number         0  stm32f2xx_hal_sram.o ABSOLUTE
    stm32f2xx_ll_fsmc.c                      0x00000000   Number         0  stm32f2xx_ll_fsmc.o ABSOLUTE
    system_stm32f2xx.c                       0x00000000   Number         0  system_stm32f2xx.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      388  startup_stm32f207xx.o(RESET)
    !!!main                                  0x08000184   Section        8  __main.o(!!!main)
    !!!scatter                               0x0800018c   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001c0   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001dc   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x080001f8   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$0000000A  0x080001f8   Section        6  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    .ARM.Collect$$_printf_percent$$00000014  0x080001fe   Section        6  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000017  0x08000204   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x08000208   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800020a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800020a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000005          0x0800020a   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000005)
    .ARM.Collect$$libinit$$0000000A          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000212   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000024          0x08000212   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000024)
    .ARM.Collect$$libinit$$00000025          0x08000216   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000216   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000216   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000216   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000216   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000216   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000218   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800021a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000003      0x0800021a   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000004      0x0800021e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800021e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800021e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800021e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x0800021e   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x08000222   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000222   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000224   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000224   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000224   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800022a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000232   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000236   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000236   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800023e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000240   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000240   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000244   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    [Anonymous Symbol]                       0x0800024c   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x08000274   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x08000284   Number         0  irq_armv7m.o(.text)
    SVC_ContextSaveRegs                      0x080002a8   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x080002b0   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x080002be   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x080002c0   Number         0  irq_armv7m.o(.text)
    .text                                    0x08000308   Section       64  startup_stm32f207xx.o(.text)
    .text                                    0x08000348   Section      240  lludivv7m.o(.text)
    .text                                    0x08000438   Section        0  noretval__2fprintf.o(.text)
    .text                                    0x0800044c   Section        0  __printf.o(.text)
    .text                                    0x080004b4   Section        0  _printf_str.o(.text)
    .text                                    0x08000508   Section        0  _printf_dec.o(.text)
    .text                                    0x08000580   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800060a   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0800061a   Section       68  rt_memclr.o(.text)
    .text                                    0x0800065e   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080006ac   Section      128  strcmpv7m.o(.text)
    .text                                    0x0800072c   Section        0  heapauxi.o(.text)
    .text                                    0x08000732   Section        0  _printf_intcommon.o(.text)
    .text                                    0x080007e4   Section        0  _printf_char.o(.text)
    .text                                    0x08000810   Section        0  initio_locked.o(.text)
    .text                                    0x080009d8   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000a3c   Section        0  h1_free_threads.o(.text)
    _printf_input_char                       0x08000ab5   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x08000ab4   Section        0  _printf_char_common.o(.text)
    .text                                    0x08000ae4   Section        0  flsbuf.o(.text)
    .text                                    0x08000cba   Section        0  fclose.o(.text)
    .text                                    0x08000d06   Section        0  setvbuf_locked.o(.text)
    _freopen_locked                          0x08000d71   Thumb Code   180  fopen_locked.o(.text)
    .text                                    0x08000d70   Section        0  fopen_locked.o(.text)
    .text                                    0x08000ebc   Section        0  defsig_rtred_outer.o(.text)
    .text                                    0x08000eca   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000f14   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .text                                    0x08000f1e   Section        0  hguard.o(.text)
    .text                                    0x08000f22   Section        0  init_alloc.o(.text)
    AlignUp                                  0x08000fad   Thumb Code    10  h1_alloc_threads.o(.text)
    .text                                    0x08000fac   Section        0  h1_alloc_threads.o(.text)
    Heap1_SizeAdjust                         0x08000fb7   Thumb Code     6  h1_alloc_threads.o(.text)
    .text                                    0x08001054   Section        0  _printf_char_file_locked.o(.text)
    .text                                    0x08001094   Section        0  fseek.o(.text)
    .text                                    0x0800118c   Section        0  stdio.o(.text)
    .text                                    0x0800127c   Section        0  puts_locked.o(.text)
    .text                                    0x080012bc   Section        0  fwritefast_locked.o(.text)
    .text                                    0x0800138c   Section        0  exit.o(.text)
    .text                                    0x0800139e   Section        0  defsig_exit.o(.text)
    .text                                    0x080013a8   Section        0  defsig_rtred_inner.o(.text)
    .text                                    0x080013dc   Section        0  sys_exit.o(.text)
    .text                                    0x080013e8   Section        8  libspace.o(.text)
    .text                                    0x080013f0   Section        0  maybetermalloc2.o(.text)
    .text                                    0x080013f0   Section        0  h1_init_threads.o(.text)
    AlignUpOffset                            0x08001403   Thumb Code    14  h1_extend_threads.o(.text)
    .text                                    0x08001402   Section        0  h1_extend_threads.o(.text)
    .text                                    0x08001454   Section        0  ftell.o(.text)
    .text                                    0x08001496   Section        0  defsig_general.o(.text)
    .text                                    0x080014c8   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x080014d6   Section        0  sys_wrch.o(.text)
    .text                                    0x080014e4   Section        2  use_no_semi.o(.text)
    .text                                    0x080014e6   Section        0  indicate_semi.o(.text)
    .text                                    0x080014e6   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x080014ea   Section        0  term_alloc.o(.text)
    .text                                    0x080014fc   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x0800154c   Section        0  h1_final_threads.o(.text)
    Disable_SPI_Clock                        0x08001559   Thumb Code    18  spi_stm32f2xx.o(.text.Disable_SPI_Clock)
    [Anonymous Symbol]                       0x08001558   Section        0  spi_stm32f2xx.o(.text.Disable_SPI_Clock)
    Enable_GPIO_Clock                        0x0800156d   Thumb Code    36  spi_stm32f2xx.o(.text.Enable_GPIO_Clock)
    [Anonymous Symbol]                       0x0800156c   Section        0  spi_stm32f2xx.o(.text.Enable_GPIO_Clock)
    Enable_SPI_Clock                         0x08001591   Thumb Code    36  spi_stm32f2xx.o(.text.Enable_SPI_Clock)
    [Anonymous Symbol]                       0x08001590   Section        0  spi_stm32f2xx.o(.text.Enable_SPI_Clock)
    [Anonymous Symbol]                       0x080015b4   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x080015b8   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x080015bc   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x080015c0   Section        0  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x080015c4   Section        0  rtx_evr.o(.text.EvrRtxKernelGetState)
    [Anonymous Symbol]                       0x080015c8   Section        0  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x080015cc   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x080015d0   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x080015d4   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x080015d8   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x080015dc   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x080015e0   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x080015e4   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x080015e8   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x080015ec   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x080015f0   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x080015f4   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x080015f8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x080015fc   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x08001600   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08001604   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x08001608   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x0800160c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x08001610   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x08001614   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x08001618   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x0800161c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08001620   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x08001624   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x08001628   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x0800162c   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquire)
    [Anonymous Symbol]                       0x08001630   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    [Anonymous Symbol]                       0x08001634   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x08001638   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x0800163c   Section        0  rtx_evr.o(.text.EvrRtxMutexCreated)
    [Anonymous Symbol]                       0x08001640   Section        0  rtx_evr.o(.text.EvrRtxMutexDelete)
    [Anonymous Symbol]                       0x08001644   Section        0  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    [Anonymous Symbol]                       0x08001648   Section        0  rtx_evr.o(.text.EvrRtxMutexError)
    [Anonymous Symbol]                       0x0800164c   Section        0  rtx_evr.o(.text.EvrRtxMutexNew)
    [Anonymous Symbol]                       0x08001650   Section        0  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    [Anonymous Symbol]                       0x08001654   Section        0  rtx_evr.o(.text.EvrRtxMutexRelease)
    [Anonymous Symbol]                       0x08001658   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x0800165c   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x08001660   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x08001664   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x08001668   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x0800166c   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x08001670   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x08001674   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    [Anonymous Symbol]                       0x08001678   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x0800167c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    [Anonymous Symbol]                       0x08001680   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08001684   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x08001688   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    [Anonymous Symbol]                       0x0800168c   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    [Anonymous Symbol]                       0x08001690   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08001694   Section        0  rtx_evr.o(.text.EvrRtxThreadGetId)
    [Anonymous Symbol]                       0x08001698   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x0800169c   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x080016a0   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x080016a4   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x080016a8   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x080016ac   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x080016b0   Section        0  stm32f2xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    [Anonymous Symbol]                       0x080017c4   Section        0  stm32f2xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08001960   Section        0  main.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x080019b0   Section        0  stm32f2xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x080019e8   Section        0  main.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x080019ec   Section        0  stm32f2xx_hal.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x080019f0   Section        0  stm32f2xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x080019f8   Section        0  stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08001a00   Section        0  stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08001b5c   Section        0  stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    [Anonymous Symbol]                       0x08001b68   Section        0  stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    [Anonymous Symbol]                       0x08001b8c   Section        0  stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08001bf4   Section        0  stm32f2xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08001f20   Section        0  retarget_io.o(.text.ITM_SendChar)
    IsException                              0x08001f51   Thumb Code    12  rtx_kernel.o(.text.IsException)
    [Anonymous Symbol]                       0x08001f50   Section        0  rtx_kernel.o(.text.IsException)
    IsException                              0x08001f5d   Thumb Code    12  rtx_msgqueue.o(.text.IsException)
    [Anonymous Symbol]                       0x08001f5c   Section        0  rtx_msgqueue.o(.text.IsException)
    IsException                              0x08001f69   Thumb Code    12  rtx_mutex.o(.text.IsException)
    [Anonymous Symbol]                       0x08001f68   Section        0  rtx_mutex.o(.text.IsException)
    IsException                              0x08001f75   Thumb Code    12  rtx_thread.o(.text.IsException)
    [Anonymous Symbol]                       0x08001f74   Section        0  rtx_thread.o(.text.IsException)
    IsIrqMasked                              0x08001f81   Thumb Code    24  rtx_kernel.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08001f80   Section        0  rtx_kernel.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08001f99   Thumb Code    24  rtx_msgqueue.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08001f98   Section        0  rtx_msgqueue.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08001fb1   Thumb Code    24  rtx_mutex.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08001fb0   Section        0  rtx_mutex.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08001fc9   Thumb Code    24  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08001fc8   Section        0  rtx_thread.o(.text.IsIrqMasked)
    IsPrivileged                             0x08001fe1   Thumb Code    12  rtx_kernel.o(.text.IsPrivileged)
    [Anonymous Symbol]                       0x08001fe0   Section        0  rtx_kernel.o(.text.IsPrivileged)
    [Anonymous Symbol]                       0x08001fec   Section        0  led.o(.text.LED_clear)
    [Anonymous Symbol]                       0x08002020   Section        0  led.o(.text.LED_end_frame)
    [Anonymous Symbol]                       0x0800203c   Section        0  led.o(.text.LED_init)
    [Anonymous Symbol]                       0x080020cc   Section        0  led.o(.text.LED_send)
    [Anonymous Symbol]                       0x0800213c   Section        0  led.o(.text.LED_set_color)
    [Anonymous Symbol]                       0x08002170   Section        0  led.o(.text.LED_set_colors)
    [Anonymous Symbol]                       0x08002198   Section        0  led.o(.text.LED_set_pile_colors)
    [Anonymous Symbol]                       0x080021a8   Section        0  led.o(.text.LED_spi_callback)
    [Anonymous Symbol]                       0x08002240   Section        0  led.o(.text.LED_spi_thread)
    [Anonymous Symbol]                       0x08002320   Section        0  led.o(.text.LED_start_frame)
    MemBlockPtr                              0x08002331   Thumb Code     4  rtx_memory.o(.text.MemBlockPtr)
    [Anonymous Symbol]                       0x08002330   Section        0  rtx_memory.o(.text.MemBlockPtr)
    MemHeadPtr                               0x08002335   Thumb Code     2  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x08002334   Section        0  rtx_memory.o(.text.MemHeadPtr)
    MessageQueueGet                          0x08002339   Thumb Code    42  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08002338   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x08002365   Thumb Code    84  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x08002364   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x080023b9   Thumb Code    36  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x080023b8   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x080023dc   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x080023e8   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x0800241c   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08002424   Section        0  os_systick.o(.text.OS_Tick_Setup)
    SPI2_Control                             0x0800246d   Thumb Code     8  spi_stm32f2xx.o(.text.SPI2_Control)
    [Anonymous Symbol]                       0x0800246c   Section        0  spi_stm32f2xx.o(.text.SPI2_Control)
    SPI2_GetDataCount                        0x08002475   Thumb Code     8  spi_stm32f2xx.o(.text.SPI2_GetDataCount)
    [Anonymous Symbol]                       0x08002474   Section        0  spi_stm32f2xx.o(.text.SPI2_GetDataCount)
    SPI2_GetStatus                           0x0800247d   Thumb Code     8  spi_stm32f2xx.o(.text.SPI2_GetStatus)
    [Anonymous Symbol]                       0x0800247c   Section        0  spi_stm32f2xx.o(.text.SPI2_GetStatus)
    [Anonymous Symbol]                       0x08002484   Section        0  spi_stm32f2xx.o(.text.SPI2_IRQHandler)
    SPI2_Initialize                          0x0800248d   Thumb Code    10  spi_stm32f2xx.o(.text.SPI2_Initialize)
    [Anonymous Symbol]                       0x0800248c   Section        0  spi_stm32f2xx.o(.text.SPI2_Initialize)
    SPI2_PowerControl                        0x08002499   Thumb Code     8  spi_stm32f2xx.o(.text.SPI2_PowerControl)
    [Anonymous Symbol]                       0x08002498   Section        0  spi_stm32f2xx.o(.text.SPI2_PowerControl)
    SPI2_Receive                             0x080024a1   Thumb Code     8  spi_stm32f2xx.o(.text.SPI2_Receive)
    [Anonymous Symbol]                       0x080024a0   Section        0  spi_stm32f2xx.o(.text.SPI2_Receive)
    SPI2_Send                                0x080024a9   Thumb Code     8  spi_stm32f2xx.o(.text.SPI2_Send)
    [Anonymous Symbol]                       0x080024a8   Section        0  spi_stm32f2xx.o(.text.SPI2_Send)
    SPI2_Transfer                            0x080024b1   Thumb Code     8  spi_stm32f2xx.o(.text.SPI2_Transfer)
    [Anonymous Symbol]                       0x080024b0   Section        0  spi_stm32f2xx.o(.text.SPI2_Transfer)
    SPI2_Uninitialize                        0x080024b9   Thumb Code    10  spi_stm32f2xx.o(.text.SPI2_Uninitialize)
    [Anonymous Symbol]                       0x080024b8   Section        0  spi_stm32f2xx.o(.text.SPI2_Uninitialize)
    SPIX_GetCapabilities                     0x080024c5   Thumb Code     4  spi_stm32f2xx.o(.text.SPIX_GetCapabilities)
    [Anonymous Symbol]                       0x080024c4   Section        0  spi_stm32f2xx.o(.text.SPIX_GetCapabilities)
    SPIX_GetVersion                          0x080024c9   Thumb Code    10  spi_stm32f2xx.o(.text.SPIX_GetVersion)
    [Anonymous Symbol]                       0x080024c8   Section        0  spi_stm32f2xx.o(.text.SPIX_GetVersion)
    SPI_Control                              0x080024d5   Thumb Code   728  spi_stm32f2xx.o(.text.SPI_Control)
    [Anonymous Symbol]                       0x080024d4   Section        0  spi_stm32f2xx.o(.text.SPI_Control)
    SPI_GetDataCount                         0x080027ad   Thumb Code    12  spi_stm32f2xx.o(.text.SPI_GetDataCount)
    [Anonymous Symbol]                       0x080027ac   Section        0  spi_stm32f2xx.o(.text.SPI_GetDataCount)
    SPI_GetStatus                            0x080027b9   Thumb Code    40  spi_stm32f2xx.o(.text.SPI_GetStatus)
    [Anonymous Symbol]                       0x080027b8   Section        0  spi_stm32f2xx.o(.text.SPI_GetStatus)
    SPI_IRQHandler                           0x080027e1   Thumb Code   240  spi_stm32f2xx.o(.text.SPI_IRQHandler)
    [Anonymous Symbol]                       0x080027e0   Section        0  spi_stm32f2xx.o(.text.SPI_IRQHandler)
    SPI_Initialize                           0x080028d1   Thumb Code   166  spi_stm32f2xx.o(.text.SPI_Initialize)
    [Anonymous Symbol]                       0x080028d0   Section        0  spi_stm32f2xx.o(.text.SPI_Initialize)
    SPI_PeripheralReset                      0x08002979   Thumb Code    34  spi_stm32f2xx.o(.text.SPI_PeripheralReset)
    [Anonymous Symbol]                       0x08002978   Section        0  spi_stm32f2xx.o(.text.SPI_PeripheralReset)
    SPI_PowerControl                         0x0800299d   Thumb Code   194  spi_stm32f2xx.o(.text.SPI_PowerControl)
    [Anonymous Symbol]                       0x0800299c   Section        0  spi_stm32f2xx.o(.text.SPI_PowerControl)
    SPI_Receive                              0x08002a61   Thumb Code   130  spi_stm32f2xx.o(.text.SPI_Receive)
    [Anonymous Symbol]                       0x08002a60   Section        0  spi_stm32f2xx.o(.text.SPI_Receive)
    SPI_RxData                               0x08002ae5   Thumb Code    90  spi_stm32f2xx.o(.text.SPI_RxData)
    [Anonymous Symbol]                       0x08002ae4   Section        0  spi_stm32f2xx.o(.text.SPI_RxData)
    SPI_Send                                 0x08002b41   Thumb Code   130  spi_stm32f2xx.o(.text.SPI_Send)
    [Anonymous Symbol]                       0x08002b40   Section        0  spi_stm32f2xx.o(.text.SPI_Send)
    SPI_Transfer                             0x08002bc5   Thumb Code    58  spi_stm32f2xx.o(.text.SPI_Transfer)
    [Anonymous Symbol]                       0x08002bc4   Section        0  spi_stm32f2xx.o(.text.SPI_Transfer)
    SPI_TxData                               0x08002c01   Thumb Code    92  spi_stm32f2xx.o(.text.SPI_TxData)
    [Anonymous Symbol]                       0x08002c00   Section        0  spi_stm32f2xx.o(.text.SPI_TxData)
    SPI_Uninitialize                         0x08002c5d   Thumb Code    56  spi_stm32f2xx.o(.text.SPI_Uninitialize)
    [Anonymous Symbol]                       0x08002c5c   Section        0  spi_stm32f2xx.o(.text.SPI_Uninitialize)
    SVC_Setup                                0x08002c95   Thumb Code    48  rtx_kernel.o(.text.SVC_Setup)
    [Anonymous Symbol]                       0x08002c94   Section        0  rtx_kernel.o(.text.SVC_Setup)
    SetPendSV                                0x08002cc5   Thumb Code    16  rtx_system.o(.text.SetPendSV)
    [Anonymous Symbol]                       0x08002cc4   Section        0  rtx_system.o(.text.SetPendSV)
    SystemClock_Config                       0x08002cd5   Thumb Code    74  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08002cd4   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08002d20   Section        0  system_stm32f2xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08002da0   Section        0  system_stm32f2xx.o(.text.SystemInit)
    ThreadFlagsCheck                         0x08002de9   Thumb Code    62  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08002de8   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsSet                           0x08002e29   Thumb Code    10  rtx_thread.o(.text.ThreadFlagsSet)
    [Anonymous Symbol]                       0x08002e28   Section        0  rtx_thread.o(.text.ThreadFlagsSet)
    TimerInsert                              0x08002e35   Thumb Code   104  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08002e34   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerUnlink                              0x08002e9d   Thumb Code    22  rtx_timer.o(.text.TimerUnlink)
    [Anonymous Symbol]                       0x08002e9c   Section        0  rtx_timer.o(.text.TimerUnlink)
    __NVIC_ClearPendingIRQ                   0x08002eb5   Thumb Code    14  spi_stm32f2xx.o(.text.__NVIC_ClearPendingIRQ)
    [Anonymous Symbol]                       0x08002eb4   Section        0  spi_stm32f2xx.o(.text.__NVIC_ClearPendingIRQ)
    __NVIC_DisableIRQ                        0x08002ec5   Thumb Code    40  stm32f2xx_hal_cortex.o(.text.__NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x08002ec4   Section        0  stm32f2xx_hal_cortex.o(.text.__NVIC_DisableIRQ)
    __NVIC_EnableIRQ                         0x08002eed   Thumb Code    14  spi_stm32f2xx.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08002eec   Section        0  spi_stm32f2xx.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x08002efd   Thumb Code    16  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x08002efc   Section        0  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriorityGrouping               0x08002f0d   Thumb Code    32  stm32f2xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08002f0c   Section        0  stm32f2xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08002f2c   Section        0  rtx_lib.o(.text.__user_perthread_libspace)
    __tagsym$$used.1                         0x08002f84   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08002f84   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08002fa0   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08002fa0   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x08002fac   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08002fac   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08002fcc   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08002fcc   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08002fe4   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x08002fec   Section        0  retarget_io.o(.text._sys_close)
    [Anonymous Symbol]                       0x08003000   Section        0  retarget_io.o(.text._sys_flen)
    [Anonymous Symbol]                       0x08003004   Section        0  retarget_io.o(.text._sys_istty)
    [Anonymous Symbol]                       0x08003014   Section        0  retarget_io.o(.text._sys_open)
    [Anonymous Symbol]                       0x08003078   Section        0  retarget_io.o(.text._sys_seek)
    [Anonymous Symbol]                       0x08003080   Section        0  retarget_io.o(.text._sys_write)
    atomic_chk32_all                         0x080030c5   Thumb Code    38  rtx_thread.o(.text.atomic_chk32_all)
    [Anonymous Symbol]                       0x080030c4   Section        0  rtx_thread.o(.text.atomic_chk32_all)
    atomic_chk32_any                         0x080030ed   Thumb Code    34  rtx_thread.o(.text.atomic_chk32_any)
    [Anonymous Symbol]                       0x080030ec   Section        0  rtx_thread.o(.text.atomic_chk32_any)
    atomic_dec16_nz                          0x08003111   Thumb Code    36  rtx_system.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x08003110   Section        0  rtx_system.o(.text.atomic_dec16_nz)
    atomic_dec32                             0x08003135   Thumb Code    16  rtx_mempool.o(.text.atomic_dec32)
    [Anonymous Symbol]                       0x08003134   Section        0  rtx_mempool.o(.text.atomic_dec32)
    atomic_dec32_nz                          0x08003145   Thumb Code    26  rtx_msgqueue.o(.text.atomic_dec32_nz)
    [Anonymous Symbol]                       0x08003144   Section        0  rtx_msgqueue.o(.text.atomic_dec32_nz)
    atomic_inc16_lim                         0x08003161   Thumb Code    26  rtx_system.o(.text.atomic_inc16_lim)
    [Anonymous Symbol]                       0x08003160   Section        0  rtx_system.o(.text.atomic_inc16_lim)
    atomic_inc16_lt                          0x0800317d   Thumb Code    40  rtx_system.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x0800317c   Section        0  rtx_system.o(.text.atomic_inc16_lt)
    atomic_inc32                             0x080031a5   Thumb Code    16  rtx_mempool.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x080031a4   Section        0  rtx_mempool.o(.text.atomic_inc32)
    atomic_inc32                             0x080031b5   Thumb Code    16  rtx_msgqueue.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x080031b4   Section        0  rtx_msgqueue.o(.text.atomic_inc32)
    atomic_link_get                          0x080031c5   Thumb Code    26  rtx_mempool.o(.text.atomic_link_get)
    [Anonymous Symbol]                       0x080031c4   Section        0  rtx_mempool.o(.text.atomic_link_get)
    atomic_link_put                          0x080031e1   Thumb Code    30  rtx_mempool.o(.text.atomic_link_put)
    [Anonymous Symbol]                       0x080031e0   Section        0  rtx_mempool.o(.text.atomic_link_put)
    atomic_set32                             0x08003201   Thumb Code    22  rtx_thread.o(.text.atomic_set32)
    [Anonymous Symbol]                       0x08003200   Section        0  rtx_thread.o(.text.atomic_set32)
    atomic_wr8                               0x08003219   Thumb Code    18  rtx_msgqueue.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x08003218   Section        0  rtx_msgqueue.o(.text.atomic_wr8)
    isrRtxMessageQueueGet                    0x0800322d   Thumb Code   116  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0800322c   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    isrRtxMessageQueuePut                    0x080032a1   Thumb Code   126  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080032a0   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    isrRtxThreadFlagsSet                     0x08003321   Thumb Code    90  rtx_thread.o(.text.isrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x08003320   Section        0  rtx_thread.o(.text.isrRtxThreadFlagsSet)
    isr_queue_get                            0x0800337d   Thumb Code    46  rtx_system.o(.text.isr_queue_get)
    [Anonymous Symbol]                       0x0800337c   Section        0  rtx_system.o(.text.isr_queue_get)
    isr_queue_put                            0x080033ad   Thumb Code    50  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x080033ac   Section        0  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x080033e0   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08003418   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08003440   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x08003460   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08003494   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080034c4   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08003508   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x0800354c   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08003584   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x080035b8   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x080035ec   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08003620   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    osRtxEventFlagsObject                    0x08003625   Thumb Code     2  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x08003624   Section        0  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x08003628   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x0800362c   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelGetState                      0x08003641   Thumb Code    12  rtx_system.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x08003640   Section        0  rtx_system.o(.text.osRtxKernelGetState)
    osRtxKernelGetState                      0x0800364d   Thumb Code    12  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x0800364c   Section        0  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x08003658   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxKernelState                         0x0800365d   Thumb Code    12  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x0800365c   Section        0  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x08003668   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08003720   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08003798   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x080037fc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08003828   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x0800386c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMemoryPoolObject                    0x080038cd   Thumb Code     2  rtx_system.o(.text.osRtxMemoryPoolObject)
    [Anonymous Symbol]                       0x080038cc   Section        0  rtx_system.o(.text.osRtxMemoryPoolObject)
    osRtxMessageObject                       0x080038d1   Thumb Code     2  rtx_system.o(.text.osRtxMessageObject)
    [Anonymous Symbol]                       0x080038d0   Section        0  rtx_system.o(.text.osRtxMessageObject)
    osRtxMessageQueueId                      0x080038d5   Thumb Code     2  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    [Anonymous Symbol]                       0x080038d4   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    osRtxMessageQueuePostProcess             0x080038d9   Thumb Code   258  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080038d8   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080039dc   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexId                             0x08003a0d   Thumb Code     2  rtx_mutex.o(.text.osRtxMutexId)
    [Anonymous Symbol]                       0x08003a0c   Section        0  rtx_mutex.o(.text.osRtxMutexId)
    osRtxMutexObject                         0x08003a11   Thumb Code     2  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x08003a10   Section        0  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x08003a14   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08003a80   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxObject                              0x08003ad1   Thumb Code     2  rtx_msgqueue.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08003ad0   Section        0  rtx_msgqueue.o(.text.osRtxObject)
    osRtxObject                              0x08003ad5   Thumb Code     2  rtx_mutex.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08003ad4   Section        0  rtx_mutex.o(.text.osRtxObject)
    osRtxObject                              0x08003ad9   Thumb Code     2  rtx_system.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08003ad8   Section        0  rtx_system.o(.text.osRtxObject)
    osRtxObject                              0x08003add   Thumb Code     2  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08003adc   Section        0  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x08003ae0   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08003b44   Section        0  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphoreObject                     0x08003b71   Thumb Code     2  rtx_system.o(.text.osRtxSemaphoreObject)
    [Anonymous Symbol]                       0x08003b70   Section        0  rtx_system.o(.text.osRtxSemaphoreObject)
    osRtxThreadBlock                         0x08003b75   Thumb Code    72  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08003b74   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08003bbd   Thumb Code   160  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08003bbc   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x08003c5d   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08003c5c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08003cac   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x08003d79   Thumb Code    54  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08003d78   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08003db0   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x08003e11   Thumb Code    96  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08003e10   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadGetRunning                    0x08003e71   Thumb Code    12  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08003e70   Section        0  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x08003e7d   Thumb Code    12  rtx_mutex.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08003e7c   Section        0  rtx_mutex.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x08003e89   Thumb Code    12  rtx_thread.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08003e88   Section        0  rtx_thread.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x08003e95   Thumb Code    12  rtx_timer.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x08003e94   Section        0  rtx_timer.o(.text.osRtxThreadGetRunning)
    osRtxThreadId                            0x08003ea1   Thumb Code     2  rtx_thread.o(.text.osRtxThreadId)
    [Anonymous Symbol]                       0x08003ea0   Section        0  rtx_thread.o(.text.osRtxThreadId)
    osRtxThreadJoinWakeup                    0x08003ea5   Thumb Code    38  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08003ea4   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08003ecc   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08003ee4   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08003f18   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x08003f35   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08003f34   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08003f48   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadObject                        0x08003f79   Thumb Code     2  rtx_system.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x08003f78   Section        0  rtx_system.o(.text.osRtxThreadObject)
    osRtxThreadObject                        0x08003f7d   Thumb Code     2  rtx_thread.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x08003f7c   Section        0  rtx_thread.o(.text.osRtxThreadObject)
    osRtxThreadPostProcess                   0x08003f81   Thumb Code    56  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08003f80   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08003fb8   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08003fd0   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadSetRunning                    0x08003fd9   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x08003fd8   Section        0  rtx_thread.o(.text.osRtxThreadSetRunning)
    osRtxThreadSetRunning                    0x08003fe5   Thumb Code    12  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x08003fe4   Section        0  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x08003ff0   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08004010   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08004060   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08004078   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x080040d4   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08004100   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x0800418c   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x080041b4   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x080041e1   Thumb Code   136  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080041e0   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08004268   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08004284   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x080042b4   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x080042f0   Section        0  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x08004310   Section        0  rtx_thread.o(.text.osThreadNew)
    os_kernel_is_active                      0x0800434d   Thumb Code    30  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x0800434c   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    stderr_putchar                           0x0800436d   Thumb Code     8  retarget_io.o(.text.stderr_putchar)
    [Anonymous Symbol]                       0x0800436c   Section        0  retarget_io.o(.text.stderr_putchar)
    stdout_putchar                           0x08004375   Thumb Code     8  retarget_io.o(.text.stdout_putchar)
    [Anonymous Symbol]                       0x08004374   Section        0  retarget_io.o(.text.stdout_putchar)
    svcRtxKernelGetState                     0x0800437d   Thumb Code    16  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x0800437c   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickCount                 0x0800438d   Thumb Code    20  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x0800438c   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x080043a1   Thumb Code   336  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x080043a0   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x080044f1   Thumb Code   132  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x080044f0   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08004575   Thumb Code   298  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08004574   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x080046a1   Thumb Code   392  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x080046a0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08004829   Thumb Code   268  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08004828   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08004935   Thumb Code   230  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08004934   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08004a1d   Thumb Code   216  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08004a1c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08004af5   Thumb Code   144  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08004af4   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08004b85   Thumb Code   248  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08004b84   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08004c7d   Thumb Code    98  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08004c7c   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsSet                     0x08004ce1   Thumb Code   142  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x08004ce0   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x08004d71   Thumb Code   166  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08004d70   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadGetId                        0x08004e19   Thumb Code    16  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x08004e18   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x08004e29   Thumb Code   576  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08004e28   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    i.fputc                                  0x08005068   Section        0  fputc.o(i.fputc)
    __tagsym$$used.4                         0x08005084   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x080050f4   Number         0  rtx_lib.o(.rodata)
    .L__const.LED_spi_thread.blue            0x0800512c   Data          40  led.o(.rodata..L__const.LED_spi_thread.blue)
    .L__const.LED_spi_thread.green           0x08005154   Data          40  led.o(.rodata..L__const.LED_spi_thread.green)
    .L__const.LED_spi_thread.red             0x0800517c   Data          40  led.o(.rodata..L__const.LED_spi_thread.red)
    os_idle_thread_attr                      0x08005228   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08005228   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x0800524c   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x0800524c   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08005264   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08005264   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str.2                                 0x08005288   Data          30  led.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005288   Section        0  led.o(.rodata.str1.1)
    .L.str.7                                 0x080052b1   Data           6  led.o(.rodata.str1.1)
    .L.str                                   0x080052b8   Data          11  rtx_kernel.o(.rodata.str1.4)
    [Anonymous Symbol]                       0x080052b8   Section        0  rtx_kernel.o(.rodata.str1.4)
    .data                                    0x20000000   Section        4  stdio_streams.o(.data)
    .data                                    0x20000004   Section        4  stdio_streams.o(.data)
    .data                                    0x20000008   Section        4  stdio_streams.o(.data)
    .data                                    0x2000000c   Section        4  streamlock.o(.data)
    g_LedNumber                              0x20000014   Data           1  led.o(.data.g_LedNumber)
    [Anonymous Symbol]                       0x20000014   Section        0  led.o(.data.g_LedNumber)
    .bss                                     0x200000c0   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20000114   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20000168   Section       84  stdio_streams.o(.bss)
    .bss                                     0x200001bc   Section       96  libspace.o(.bss)
    HAL_GetTick.ticks                        0x2000021c   Data           4  main.o(.bss.HAL_GetTick.ticks)
    [Anonymous Symbol]                       0x2000021c   Section        0  main.o(.bss.HAL_GetTick.ticks)
    SPI2_Info.0                              0x20000224   Data           4  spi_stm32f2xx.o(.bss.SPI2_Info.0)
    [Anonymous Symbol]                       0x20000224   Section        0  spi_stm32f2xx.o(.bss.SPI2_Info.0)
    SPI2_Info.1.0                            0x20000228   Data           1  spi_stm32f2xx.o(.bss.SPI2_Info.1.0)
    [Anonymous Symbol]                       0x20000228   Section        0  spi_stm32f2xx.o(.bss.SPI2_Info.1.0)
    SPI2_Info.1.1                            0x2000022c   Data           1  spi_stm32f2xx.o(.bss.SPI2_Info.1.1)
    [Anonymous Symbol]                       0x2000022c   Section        0  spi_stm32f2xx.o(.bss.SPI2_Info.1.1)
    SPI2_Info.1.2                            0x2000022e   Data           1  spi_stm32f2xx.o(.bss.SPI2_Info.1.2)
    [Anonymous Symbol]                       0x2000022e   Section        0  spi_stm32f2xx.o(.bss.SPI2_Info.1.2)
    SPI2_Info.2                              0x20000230   Data           4  spi_stm32f2xx.o(.bss.SPI2_Info.2)
    [Anonymous Symbol]                       0x20000230   Section        0  spi_stm32f2xx.o(.bss.SPI2_Info.2)
    SPI2_Info.3                              0x20000234   Data           4  spi_stm32f2xx.o(.bss.SPI2_Info.3)
    [Anonymous Symbol]                       0x20000234   Section        0  spi_stm32f2xx.o(.bss.SPI2_Info.3)
    SPI2_TransferInfo                        0x20000238   Data          28  spi_stm32f2xx.o(.bss.SPI2_TransferInfo)
    [Anonymous Symbol]                       0x20000238   Section        0  spi_stm32f2xx.o(.bss.SPI2_TransferInfo)
    g_DataFrame                              0x20000254   Data         208  led.o(.bss.g_DataFrame)
    [Anonymous Symbol]                       0x20000254   Section        0  led.o(.bss.g_DataFrame)
    g_SpiStack                               0x20000328   Data        1024  led.o(.bss.g_SpiStack)
    [Anonymous Symbol]                       0x20000328   Section        0  led.o(.bss.g_SpiStack)
    os_isr_queue                             0x20000728   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000728   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000768   Data        4096  rtx_lib.o(.bss.os)
    PendST                                   0x20001768   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20001768   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x2000176c   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x2000176c   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x2000177c   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x2000195c   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x2000195c   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20001990   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20001990   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200019e0   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200019e0   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001a24   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20001a68   Data         256  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20001a68   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20001b68   Data         256  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20001b68   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20001c68   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20001c68   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x20001c70   Data         512  startup_stm32f207xx.o(HEAP)
    HEAP                                     0x20001c70   Section      512  startup_stm32f207xx.o(HEAP)
    Stack_Mem                                0x20001e70   Data        1024  startup_stm32f207xx.o(STACK)
    STACK                                    0x20001e70   Section     1024  startup_stm32f207xx.o(STACK)
    __initial_sp                             0x20002270   Data           0  startup_stm32f207xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    __Vectors_Size                           0x00000184   Number         0  startup_stm32f207xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f207xx.o(RESET)
    __Vectors_End                            0x08000184   Data           0  startup_stm32f207xx.o(RESET)
    __main                                   0x08000185   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x0800018d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0800018d   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x0800018d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x0800019b   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001c1   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001dd   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_percent                          0x080001f9   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_u                                0x080001f9   Thumb Code     0  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    _printf_s                                0x080001ff   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_percent_end                      0x08000205   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x08000209   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800020b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x0800020b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000005)
    __rt_lib_init_preinit_1                  0x0800020b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_atexit_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_fp_trap_1                  0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_rand_1                     0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_signal_1                   0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_2                    0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000024)
    __rt_lib_init_user_alloc_1               0x08000213   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_alloca_1                   0x08000217   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000217   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_cpp_1                      0x08000217   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000217   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_return                     0x08000217   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_stdio_1                    0x08000217   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x08000219   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800021b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_stdio_2                0x0800021b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_fp_trap_1              0x0800021f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x0800021f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x0800021f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800021f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800021f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x08000223   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000223   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_entry                               0x08000225   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000225   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000225   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800022b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000233   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000237   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000237   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800023f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000241   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000241   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000245   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x0800024d   Thumb Code   144  irq_armv7m.o(.text)
    PendSV_Handler                           0x080002dd   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x080002ed   Thumb Code    16  irq_armv7m.o(.text)
    Reset_Handler                            0x08000309   Thumb Code     8  startup_stm32f207xx.o(.text)
    NMI_Handler                              0x08000311   Thumb Code     2  startup_stm32f207xx.o(.text)
    HardFault_Handler                        0x08000313   Thumb Code     2  startup_stm32f207xx.o(.text)
    MemManage_Handler                        0x08000315   Thumb Code     2  startup_stm32f207xx.o(.text)
    BusFault_Handler                         0x08000317   Thumb Code     2  startup_stm32f207xx.o(.text)
    UsageFault_Handler                       0x08000319   Thumb Code     2  startup_stm32f207xx.o(.text)
    DebugMon_Handler                         0x0800031d   Thumb Code     2  startup_stm32f207xx.o(.text)
    ADC_IRQHandler                           0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    CAN1_RX0_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    CAN1_RX1_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    CAN1_SCE_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    CAN1_TX_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    CAN2_RX0_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    CAN2_RX1_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    CAN2_SCE_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    CAN2_TX_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DCMI_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    ETH_IRQHandler                           0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    ETH_WKUP_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    EXTI0_IRQHandler                         0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    EXTI15_10_IRQHandler                     0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    EXTI1_IRQHandler                         0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    EXTI2_IRQHandler                         0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    EXTI3_IRQHandler                         0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    EXTI4_IRQHandler                         0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    EXTI9_5_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    FLASH_IRQHandler                         0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    FSMC_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    HASH_RNG_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    I2C1_ER_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    I2C1_EV_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    I2C2_ER_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    I2C2_EV_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    I2C3_ER_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    I2C3_EV_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    OTG_FS_IRQHandler                        0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    OTG_HS_IRQHandler                        0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    PVD_IRQHandler                           0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    RCC_IRQHandler                           0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    RTC_Alarm_IRQHandler                     0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    RTC_WKUP_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    SDIO_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    SPI1_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    SPI3_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM1_CC_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM2_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM3_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM4_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM5_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM6_DAC_IRQHandler                      0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM7_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM8_CC_IRQHandler                       0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    UART4_IRQHandler                         0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    UART5_IRQHandler                         0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    USART1_IRQHandler                        0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    USART2_IRQHandler                        0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    USART3_IRQHandler                        0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    USART6_IRQHandler                        0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    WWDG_IRQHandler                          0x08000323   Thumb Code     0  startup_stm32f207xx.o(.text)
    __user_initial_stackheap                 0x08000325   Thumb Code     0  startup_stm32f207xx.o(.text)
    __aeabi_uldivmod                         0x08000349   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x08000349   Thumb Code   240  lludivv7m.o(.text)
    __2fprintf                               0x08000439   Thumb Code    20  noretval__2fprintf.o(.text)
    __printf                                 0x0800044d   Thumb Code   104  __printf.o(.text)
    _printf_str                              0x080004b5   Thumb Code    82  _printf_str.o(.text)
    _printf_int_dec                          0x08000509   Thumb Code   104  _printf_dec.o(.text)
    __aeabi_memcpy                           0x08000581   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000581   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080005e7   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0800060b   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0800060b   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x0800061b   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800061b   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0800061f   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0800065f   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0800065f   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0800065f   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08000663   Thumb Code    74  rt_memclr_w.o(.text)
    strcmp                                   0x080006ad   Thumb Code   128  strcmpv7m.o(.text)
    __use_two_region_memory                  0x0800072d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x0800072f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000731   Thumb Code     2  heapauxi.o(.text)
    _printf_int_common                       0x08000733   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_cs_common                        0x080007e5   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x080007f9   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x08000809   Thumb Code     8  _printf_char.o(.text)
    _initio                                  0x08000811   Thumb Code   240  initio_locked.o(.text)
    _terminateio                             0x08000901   Thumb Code   168  initio_locked.o(.text)
    __aeabi_memcpy4                          0x080009d9   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080009d9   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080009d9   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000a21   Thumb Code     0  rt_memcpy_w.o(.text)
    free_internal$concurrent                 0x08000a3d   Thumb Code    98  h1_free_threads.o(.text)
    free                                     0x08000a9f   Thumb Code    20  h1_free_threads.o(.text)
    _printf_char_common                      0x08000abf   Thumb Code    32  _printf_char_common.o(.text)
    __flsbuf                                 0x08000ae5   Thumb Code   470  flsbuf.o(.text)
    __flsbuf_byte                            0x08000ae5   Thumb Code     0  flsbuf.o(.text)
    __flsbuf_wide                            0x08000ae5   Thumb Code     0  flsbuf.o(.text)
    _fclose_internal                         0x08000cbb   Thumb Code    76  fclose.o(.text)
    fclose                                   0x08000cbb   Thumb Code     0  fclose.o(.text)
    setvbuf                                  0x08000d07   Thumb Code   104  setvbuf_locked.o(.text)
    freopen                                  0x08000e25   Thumb Code    42  fopen_locked.o(.text)
    _fopen$locked                            0x08000e4f   Thumb Code   100  fopen_locked.o(.text)
    __rt_SIGRTRED                            0x08000ebd   Thumb Code    14  defsig_rtred_outer.o(.text)
    __user_setup_stackheap                   0x08000ecb   Thumb Code    74  sys_stackheap_outer.o(.text)
    __rt_heap_descriptor                     0x08000f15   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    __use_no_heap                            0x08000f1f   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x08000f21   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08000f23   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x08000f25   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x08000f27   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x08000f49   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x08000f4f   Thumb Code    94  init_alloc.o(.text)
    malloc_internal$concurrent               0x08000fbd   Thumb Code   130  h1_alloc_threads.o(.text)
    malloc                                   0x0800103f   Thumb Code    20  h1_alloc_threads.o(.text)
    _printf_char_file                        0x08001055   Thumb Code    58  _printf_char_file_locked.o(.text)
    _fseek                                   0x08001095   Thumb Code   242  fseek.o(.text)
    fseek                                    0x08001095   Thumb Code     0  fseek.o(.text)
    _seterr                                  0x0800118d   Thumb Code    20  stdio.o(.text)
    _writebuf                                0x080011a1   Thumb Code    84  stdio.o(.text)
    _fflush                                  0x080011f5   Thumb Code    70  stdio.o(.text)
    _deferredlazyseek                        0x0800123b   Thumb Code    60  stdio.o(.text)
    puts                                     0x0800127d   Thumb Code    58  puts_locked.o(.text)
    fwrite                                   0x080012bd   Thumb Code   208  fwritefast_locked.o(.text)
    exit                                     0x0800138d   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x0800139f   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTRED_inner                      0x080013a9   Thumb Code    14  defsig_rtred_inner.o(.text)
    _sys_exit                                0x080013dd   Thumb Code     8  sys_exit.o(.text)
    __user_libspace                          0x080013e9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080013e9   Thumb Code     0  libspace.o(.text)
    __Heap_Initialize                        0x080013f1   Thumb Code    14  h1_init_threads.o(.text)
    _maybe_terminate_alloc                   0x080013f1   Thumb Code     0  maybetermalloc2.o(.text)
    __Heap_DescSize                          0x080013ff   Thumb Code     4  h1_init_threads.o(.text)
    __Heap_ProvideMemory                     0x08001411   Thumb Code    68  h1_extend_threads.o(.text)
    _ftell_internal                          0x08001455   Thumb Code    66  ftell.o(.text)
    ftell                                    0x08001455   Thumb Code     0  ftell.o(.text)
    __default_signal_display                 0x08001497   Thumb Code    50  defsig_general.o(.text)
    __rt_SIGRTMEM                            0x080014c9   Thumb Code    14  defsig_rtmem_outer.o(.text)
    _ttywrch                                 0x080014d7   Thumb Code    14  sys_wrch.o(.text)
    __I$use$semihosting                      0x080014e5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080014e5   Thumb Code     2  use_no_semi.o(.text)
    __aeabi_errno_addr                       0x080014e7   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x080014e7   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x080014e7   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __semihosting_library_function           0x080014e7   Thumb Code     0  indicate_semi.o(.text)
    _terminate_alloc                         0x080014eb   Thumb Code    16  term_alloc.o(.text)
    __rt_SIGRTMEM_inner                      0x080014fd   Thumb Code    22  defsig_rtmem_inner.o(.text)
    __Heap_Finalize                          0x0800154d   Thumb Code    10  h1_final_threads.o(.text)
    EvrRtxDelayCompleted                     0x080015b5   Thumb Code     2  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxEventFlagsWaitTimeout              0x080015b9   Thumb Code     2  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x080015bd   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelErrorNotify                  0x080015c1   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    EvrRtxKernelGetState                     0x080015c5   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelGetState)
    EvrRtxKernelGetTickCount                 0x080015c9   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    EvrRtxKernelInitialize                   0x080015cd   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x080015d1   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x080015d5   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x080015d9   Thumb Code     2  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x080015dd   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x080015e1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x080015e5   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x080015e9   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x080015ed   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x080015f1   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x080015f5   Thumb Code     2  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x080015f9   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x080015fd   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x08001601   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x08001605   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x08001609   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x0800160d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08001611   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNotInserted            0x08001615   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x08001619   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x0800161d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08001621   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x08001625   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x08001629   Thumb Code     2  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquire                       0x0800162d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x08001631   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x08001635   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x08001639   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x0800163d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x08001641   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x08001645   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x08001649   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexError)
    EvrRtxMutexNew                           0x0800164d   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x08001651   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x08001655   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x08001659   Thumb Code     2  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquireTimeout            0x0800165d   Thumb Code     2  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxThreadBlocked                      0x08001661   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x08001665   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x08001669   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x0800166d   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x08001671   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsError                   0x08001675   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    EvrRtxThreadFlagsSet                     0x08001679   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    EvrRtxThreadFlagsSetDone                 0x0800167d   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    EvrRtxThreadFlagsWait                    0x08001681   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    EvrRtxThreadFlagsWaitCompleted           0x08001685   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitNotCompleted        0x08001689   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    EvrRtxThreadFlagsWaitPending             0x0800168d   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    EvrRtxThreadFlagsWaitTimeout             0x08001691   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadGetId                        0x08001695   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadGetId)
    EvrRtxThreadJoined                       0x08001699   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x0800169d   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x080016a1   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x080016a5   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadUnblocked                    0x080016a9   Thumb Code     2  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x080016ad   Thumb Code     2  rtx_evr.o(.text.EvrRtxTimerCallback)
    HAL_GPIO_DeInit                          0x080016b1   Thumb Code   274  stm32f2xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    HAL_GPIO_Init                            0x080017c5   Thumb Code   412  stm32f2xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GetTick                              0x08001961   Thumb Code    80  main.o(.text.HAL_GetTick)
    HAL_Init                                 0x080019b1   Thumb Code    54  stm32f2xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x080019e9   Thumb Code     4  main.o(.text.HAL_InitTick)
    HAL_MspInit                              0x080019ed   Thumb Code     2  stm32f2xx_hal.o(.text.HAL_MspInit)
    HAL_NVIC_DisableIRQ                      0x080019f1   Thumb Code     8  stm32f2xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ)
    HAL_NVIC_SetPriorityGrouping             0x080019f9   Thumb Code     8  stm32f2xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_RCC_ClockConfig                      0x08001a01   Thumb Code   348  stm32f2xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetHCLKFreq                      0x08001b5d   Thumb Code    12  stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetPCLK1Freq                     0x08001b69   Thumb Code    34  stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq)
    HAL_RCC_GetSysClockFreq                  0x08001b8d   Thumb Code   104  stm32f2xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08001bf5   Thumb Code   810  stm32f2xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    ITM_SendChar                             0x08001f21   Thumb Code    46  retarget_io.o(.text.ITM_SendChar)
    LED_clear                                0x08001fed   Thumb Code    52  led.o(.text.LED_clear)
    LED_end_frame                            0x08002021   Thumb Code    28  led.o(.text.LED_end_frame)
    LED_init                                 0x0800203d   Thumb Code   108  led.o(.text.LED_init)
    LED_send                                 0x080020cd   Thumb Code    84  led.o(.text.LED_send)
    LED_set_color                            0x0800213d   Thumb Code    52  led.o(.text.LED_set_color)
    LED_set_colors                           0x08002171   Thumb Code    40  led.o(.text.LED_set_colors)
    LED_set_pile_colors                      0x08002199   Thumb Code    16  led.o(.text.LED_set_pile_colors)
    LED_spi_callback                         0x080021a9   Thumb Code    80  led.o(.text.LED_spi_callback)
    LED_spi_thread                           0x08002241   Thumb Code   222  led.o(.text.LED_spi_thread)
    LED_start_frame                          0x08002321   Thumb Code    14  led.o(.text.LED_start_frame)
    OS_Tick_AcknowledgeIRQ                   0x080023dd   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x080023e9   Thumb Code    50  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x0800241d   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08002425   Thumb Code    72  os_systick.o(.text.OS_Tick_Setup)
    SPI2_IRQHandler                          0x08002485   Thumb Code     8  spi_stm32f2xx.o(.text.SPI2_IRQHandler)
    SystemCoreClockUpdate                    0x08002d21   Thumb Code   126  system_stm32f2xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08002da1   Thumb Code    70  system_stm32f2xx.o(.text.SystemInit)
    __user_perthread_libspace                0x08002f2d   Thumb Code    86  rtx_lib.o(.text.__user_perthread_libspace)
    _mutex_acquire                           0x08002f85   Thumb Code    26  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x08002fa1   Thumb Code    10  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x08002fad   Thumb Code    32  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x08002fcd   Thumb Code    22  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08002fe5   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    _sys_close                               0x08002fed   Thumb Code    18  retarget_io.o(.text._sys_close)
    _sys_flen                                0x08003001   Thumb Code     4  retarget_io.o(.text._sys_flen)
    _sys_istty                               0x08003005   Thumb Code    16  retarget_io.o(.text._sys_istty)
    _sys_open                                0x08003015   Thumb Code    76  retarget_io.o(.text._sys_open)
    _sys_seek                                0x08003079   Thumb Code     6  retarget_io.o(.text._sys_seek)
    _sys_write                               0x08003081   Thumb Code    66  retarget_io.o(.text._sys_write)
    main                                     0x080033e1   Thumb Code    54  main.o(.text.main)
    osKernelGetState                         0x08003419   Thumb Code    38  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x08003441   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x08003461   Thumb Code    50  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08003495   Thumb Code    46  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x080034c5   Thumb Code    66  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x08003509   Thumb Code    66  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x0800354d   Thumb Code    56  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08003585   Thumb Code    52  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x080035b9   Thumb Code    50  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x080035ed   Thumb Code    52  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x08003621   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x08003629   Thumb Code     2  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x0800362d   Thumb Code    20  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x08003659   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x08003669   Thumb Code   182  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08003721   Thumb Code   120  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08003799   Thumb Code   100  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x080037fd   Thumb Code    42  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08003829   Thumb Code    66  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x0800386d   Thumb Code    96  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x080039dd   Thumb Code    48  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x08003a15   Thumb Code   106  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x08003a81   Thumb Code    80  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x08003ae1   Thumb Code   100  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08003b45   Thumb Code    44  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08003cad   Thumb Code   204  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08003db1   Thumb Code    94  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08003ecd   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08003ee5   Thumb Code    52  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08003f19   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08003f49   Thumb Code    48  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08003fb9   Thumb Code    24  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08003fd1   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08003ff1   Thumb Code    32  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x08004011   Thumb Code    80  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08004061   Thumb Code    22  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08004079   Thumb Code    92  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x080040d5   Thumb Code    42  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08004101   Thumb Code   138  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x0800418d   Thumb Code    38  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x080041b5   Thumb Code    42  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x08004269   Thumb Code    26  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x08004285   Thumb Code    48  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x080042b5   Thumb Code    60  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadGetId                            0x080042f1   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x08004311   Thumb Code    58  rtx_thread.o(.text.osThreadNew)
    _fputc$unlocked                          0x08005069   Thumb Code    26  fputc.o(i.fputc)
    osRtxConfig                              0x08005084   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x080050f4   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x080051a4   Data          16  system_stm32f2xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x080051b4   Data           8  system_stm32f2xx.o(.rodata.APBPrescTable)
    Driver_SPI2                              0x080051bc   Data          44  spi_stm32f2xx.o(.rodata.Driver_SPI2)
    LED_SpiThreadAttr                        0x080051e8   Data          36  led.o(.rodata.LED_SpiThreadAttr)
    __stderr_name                            0x0800520c   Data           8  retarget_io.o(.rodata.__stderr_name)
    __stdin_name                             0x08005214   Data           7  retarget_io.o(.rodata.__stdin_name)
    __stdout_name                            0x0800521b   Data           8  retarget_io.o(.rodata.__stdout_name)
    osRtxUserSVC                             0x08005224   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x080052c4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080052e4   Number         0  anon$$obj.o(Region$$Table)
    __aeabi_stdin                            0x20000000   Data           4  stdio_streams.o(.data)
    __aeabi_stdout                           0x20000004   Data           4  stdio_streams.o(.data)
    __aeabi_stderr                           0x20000008   Data           4  stdio_streams.o(.data)
    _stream_list_lock                        0x2000000c   Data           4  streamlock.o(.data)
    SystemCoreClock                          0x20000010   Data           4  system_stm32f2xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000018   Data         164  rtx_kernel.o(.data.os)
    uwTickPrio                               0x200000bc   Data           4  stm32f2xx_hal.o(.data.uwTickPrio)
    __stdin                                  0x200000c0   Data          84  stdio_streams.o(.bss)
    __stdout                                 0x20000114   Data          84  stdio_streams.o(.bss)
    __stderr                                 0x20000168   Data          84  stdio_streams.o(.bss)
    __libspace_start                         0x200001bc   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x2000021c   Data           0  libspace.o(.bss)
    LED_SpiThreadID                          0x20000220   Data           4  led.o(.bss.LED_SpiThreadID)
    .bss.os.msgqueue.cb$$Base                0x2000195c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20001990   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200019e0   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20001a68   Number         0  rtx_lib.o(.bss.os.thread.cb)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000185

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000053a8, Max: 0x00100000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000052e4, Max: 0x00100000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000184   Data   RO         1935    RESET               startup_stm32f207xx.o
    0x08000184   0x08000184   0x00000008   Code   RO         2016  * !!!main             c_w.l(__main.o)
    0x0800018c   0x0800018c   0x00000034   Code   RO         2368    !!!scatter          c_w.l(__scatter.o)
    0x080001c0   0x080001c0   0x0000001a   Code   RO         2370    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001da   0x080001da   0x00000002   PAD
    0x080001dc   0x080001dc   0x0000001c   Code   RO         2372    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001f8   0x080001f8   0x00000000   Code   RO         1993    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x080001f8   0x080001f8   0x00000006   Code   RO         1992    .ARM.Collect$$_printf_percent$$0000000A  c_w.l(_printf_u.o)
    0x080001fe   0x080001fe   0x00000006   Code   RO         1991    .ARM.Collect$$_printf_percent$$00000014  c_w.l(_printf_s.o)
    0x08000204   0x08000204   0x00000004   Code   RO         2029    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x08000208   0x08000208   0x00000002   Code   RO         2263    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         2139    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         2141    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800020a   0x0800020a   0x00000008   Code   RO         2142    .ARM.Collect$$libinit$$00000005  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2144    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2146    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2148    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2151    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2153    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2155    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2157    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2159    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2161    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2163    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2165    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2167    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         2169    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000212   0x08000212   0x00000004   Code   RO         2170    .ARM.Collect$$libinit$$00000024  c_w.l(libinit2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         2171    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         2175    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         2177    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         2179    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000216   0x08000216   0x00000000   Code   RO         2181    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000216   0x08000216   0x00000002   Code   RO         2182    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000002   Code   RO         2365    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800021a   0x0800021a   0x00000000   Code   RO         2184    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800021a   0x0800021a   0x00000004   Code   RO         2185    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         2186    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         2189    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         2192    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         2194    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800021e   0x0800021e   0x00000004   Code   RO         2195    .ARM.Collect$$libshutdown$$0000000D  c_w.l(libshutdown2.o)
    0x08000222   0x08000222   0x00000000   Code   RO         2197    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000222   0x08000222   0x00000002   Code   RO         2198    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000224   0x08000224   0x00000000   Code   RO         2018    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000224   0x08000224   0x00000000   Code   RO         2043    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000224   0x08000224   0x00000006   Code   RO         2055    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800022a   0x0800022a   0x00000008   Code   RO         2044    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000232   0x08000232   0x00000004   Code   RO         2046    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000236   0x08000236   0x00000000   Code   RO         2048    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000236   0x08000236   0x00000008   Code   RO         2049    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800023e   0x0800023e   0x00000002   Code   RO         2273    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000240   0x08000240   0x00000000   Code   RO         2326    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000240   0x08000240   0x00000004   Code   RO         2327    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000244   0x08000244   0x00000006   Code   RO         2328    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800024a   0x0800024a   0x00000002   PAD
    0x0800024c   0x0800024c   0x000000bc   Code   RO          128    .text               irq_armv7m.o
    0x08000308   0x08000308   0x00000040   Code   RO         1936    .text               startup_stm32f207xx.o
    0x08000348   0x08000348   0x000000f0   Code   RO         1959    .text               c_w.l(lludivv7m.o)
    0x08000438   0x08000438   0x00000014   Code   RO         1963    .text               c_w.l(noretval__2fprintf.o)
    0x0800044c   0x0800044c   0x00000068   Code   RO         1965    .text               c_w.l(__printf.o)
    0x080004b4   0x080004b4   0x00000052   Code   RO         1967    .text               c_w.l(_printf_str.o)
    0x08000506   0x08000506   0x00000002   PAD
    0x08000508   0x08000508   0x00000078   Code   RO         1969    .text               c_w.l(_printf_dec.o)
    0x08000580   0x08000580   0x0000008a   Code   RO         2004    .text               c_w.l(rt_memcpy_v6.o)
    0x0800060a   0x0800060a   0x00000010   Code   RO         2006    .text               c_w.l(aeabi_memset4.o)
    0x0800061a   0x0800061a   0x00000044   Code   RO         2008    .text               c_w.l(rt_memclr.o)
    0x0800065e   0x0800065e   0x0000004e   Code   RO         2010    .text               c_w.l(rt_memclr_w.o)
    0x080006ac   0x080006ac   0x00000080   Code   RO         2012    .text               c_w.l(strcmpv7m.o)
    0x0800072c   0x0800072c   0x00000006   Code   RO         2014    .text               c_w.l(heapauxi.o)
    0x08000732   0x08000732   0x000000b2   Code   RO         2023    .text               c_w.l(_printf_intcommon.o)
    0x080007e4   0x080007e4   0x0000002c   Code   RO         2025    .text               c_w.l(_printf_char.o)
    0x08000810   0x08000810   0x000001c8   Code   RO         2038    .text               c_w.l(initio_locked.o)
    0x080009d8   0x080009d8   0x00000064   Code   RO         2040    .text               c_w.l(rt_memcpy_w.o)
    0x08000a3c   0x08000a3c   0x00000076   Code   RO         2063    .text               c_w.l(h1_free_threads.o)
    0x08000ab2   0x08000ab2   0x00000002   PAD
    0x08000ab4   0x08000ab4   0x00000030   Code   RO         2115    .text               c_w.l(_printf_char_common.o)
    0x08000ae4   0x08000ae4   0x000001d6   Code   RO         2119    .text               c_w.l(flsbuf.o)
    0x08000cba   0x08000cba   0x0000004c   Code   RO         2126    .text               c_w.l(fclose.o)
    0x08000d06   0x08000d06   0x00000068   Code   RO         2130    .text               c_w.l(setvbuf_locked.o)
    0x08000d6e   0x08000d6e   0x00000002   PAD
    0x08000d70   0x08000d70   0x0000014c   Code   RO         2132    .text               c_w.l(fopen_locked.o)
    0x08000ebc   0x08000ebc   0x0000000e   Code   RO         2134    .text               c_w.l(defsig_rtred_outer.o)
    0x08000eca   0x08000eca   0x0000004a   Code   RO         2201    .text               c_w.l(sys_stackheap_outer.o)
    0x08000f14   0x08000f14   0x0000000a   Code   RO         2210    .text               c_w.l(rt_heap_descriptor_twolibspace.o)
    0x08000f1e   0x08000f1e   0x00000004   Code   RO         2212    .text               c_w.l(hguard.o)
    0x08000f22   0x08000f22   0x0000008a   Code   RO         2214    .text               c_w.l(init_alloc.o)
    0x08000fac   0x08000fac   0x000000a6   Code   RO         2222    .text               c_w.l(h1_alloc_threads.o)
    0x08001052   0x08001052   0x00000002   PAD
    0x08001054   0x08001054   0x00000040   Code   RO         2234    .text               c_w.l(_printf_char_file_locked.o)
    0x08001094   0x08001094   0x000000f8   Code   RO         2236    .text               c_w.l(fseek.o)
    0x0800118c   0x0800118c   0x000000f0   Code   RO         2238    .text               c_w.l(stdio.o)
    0x0800127c   0x0800127c   0x00000040   Code   RO         2242    .text               c_w.l(puts_locked.o)
    0x080012bc   0x080012bc   0x000000d0   Code   RO         2244    .text               c_w.l(fwritefast_locked.o)
    0x0800138c   0x0800138c   0x00000012   Code   RO         2246    .text               c_w.l(exit.o)
    0x0800139e   0x0800139e   0x0000000a   Code   RO         2248    .text               c_w.l(defsig_exit.o)
    0x080013a8   0x080013a8   0x00000034   Code   RO         2254    .text               c_w.l(defsig_rtred_inner.o)
    0x080013dc   0x080013dc   0x0000000c   Code   RO         2266    .text               c_w.l(sys_exit.o)
    0x080013e8   0x080013e8   0x00000008   Code   RO         2270    .text               c_w.l(libspace.o)
    0x080013f0   0x080013f0   0x00000000   Code   RO         2276    .text               c_w.l(maybetermalloc2.o)
    0x080013f0   0x080013f0   0x00000012   Code   RO         2281    .text               c_w.l(h1_init_threads.o)
    0x08001402   0x08001402   0x00000052   Code   RO         2283    .text               c_w.l(h1_extend_threads.o)
    0x08001454   0x08001454   0x00000042   Code   RO         2289    .text               c_w.l(ftell.o)
    0x08001496   0x08001496   0x00000032   Code   RO         2297    .text               c_w.l(defsig_general.o)
    0x080014c8   0x080014c8   0x0000000e   Code   RO         2301    .text               c_w.l(defsig_rtmem_outer.o)
    0x080014d6   0x080014d6   0x0000000e   Code   RO         2314    .text               c_w.l(sys_wrch.o)
    0x080014e4   0x080014e4   0x00000002   Code   RO         2322    .text               c_w.l(use_no_semi.o)
    0x080014e6   0x080014e6   0x00000000   Code   RO         2324    .text               c_w.l(indicate_semi.o)
    0x080014e6   0x080014e6   0x00000004   Code   RO         2337    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x080014ea   0x080014ea   0x00000010   Code   RO         2341    .text               c_w.l(term_alloc.o)
    0x080014fa   0x080014fa   0x00000002   PAD
    0x080014fc   0x080014fc   0x00000050   Code   RO         2343    .text               c_w.l(defsig_rtmem_inner.o)
    0x0800154c   0x0800154c   0x0000000a   Code   RO         2349    .text               c_w.l(h1_final_threads.o)
    0x08001556   0x08001556   0x00000002   PAD
    0x08001558   0x08001558   0x00000012   Code   RO         1321    .text.Disable_SPI_Clock  spi_stm32f2xx.o
    0x0800156a   0x0800156a   0x00000002   PAD
    0x0800156c   0x0800156c   0x00000024   Code   RO         1311    .text.Enable_GPIO_Clock  spi_stm32f2xx.o
    0x08001590   0x08001590   0x00000024   Code   RO         1323    .text.Enable_SPI_Clock  spi_stm32f2xx.o
    0x080015b4   0x080015b4   0x00000002   Code   RO          372    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x080015b6   0x080015b6   0x00000002   PAD
    0x080015b8   0x080015b8   0x00000002   Code   RO          420    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x080015ba   0x080015ba   0x00000002   PAD
    0x080015bc   0x080015bc   0x00000002   Code   RO          234    .text.EvrRtxKernelError  rtx_evr.o
    0x080015be   0x080015be   0x00000002   PAD
    0x080015c0   0x080015c0   0x00000002   Code   RO          278    .text.EvrRtxKernelErrorNotify  rtx_evr.o
    0x080015c2   0x080015c2   0x00000002   PAD
    0x080015c4   0x080015c4   0x00000002   Code   RO          244    .text.EvrRtxKernelGetState  rtx_evr.o
    0x080015c6   0x080015c6   0x00000002   PAD
    0x080015c8   0x080015c8   0x00000002   Code   RO          270    .text.EvrRtxKernelGetTickCount  rtx_evr.o
    0x080015ca   0x080015ca   0x00000002   PAD
    0x080015cc   0x080015cc   0x00000002   Code   RO          236    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x080015ce   0x080015ce   0x00000002   PAD
    0x080015d0   0x080015d0   0x00000002   Code   RO          238    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x080015d2   0x080015d2   0x00000002   PAD
    0x080015d4   0x080015d4   0x00000002   Code   RO          246    .text.EvrRtxKernelStart  rtx_evr.o
    0x080015d6   0x080015d6   0x00000002   PAD
    0x080015d8   0x080015d8   0x00000002   Code   RO          248    .text.EvrRtxKernelStarted  rtx_evr.o
    0x080015da   0x080015da   0x00000002   PAD
    0x080015dc   0x080015dc   0x00000002   Code   RO          224    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x080015de   0x080015de   0x00000002   PAD
    0x080015e0   0x080015e0   0x00000002   Code   RO          230    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x080015e2   0x080015e2   0x00000002   PAD
    0x080015e4   0x080015e4   0x00000002   Code   RO          232    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x080015e6   0x080015e6   0x00000002   PAD
    0x080015e8   0x080015e8   0x00000002   Code   RO          228    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x080015ea   0x080015ea   0x00000002   PAD
    0x080015ec   0x080015ec   0x00000002   Code   RO          226    .text.EvrRtxMemoryFree  rtx_evr.o
    0x080015ee   0x080015ee   0x00000002   PAD
    0x080015f0   0x080015f0   0x00000002   Code   RO          222    .text.EvrRtxMemoryInit  rtx_evr.o
    0x080015f2   0x080015f2   0x00000002   PAD
    0x080015f4   0x080015f4   0x00000002   Code   RO          498    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x080015f6   0x080015f6   0x00000002   PAD
    0x080015f8   0x080015f8   0x00000002   Code   RO          526    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x080015fa   0x080015fa   0x00000002   PAD
    0x080015fc   0x080015fc   0x00000002   Code   RO          522    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x080015fe   0x080015fe   0x00000002   PAD
    0x08001600   0x08001600   0x00000002   Code   RO          542    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x08001602   0x08001602   0x00000002   PAD
    0x08001604   0x08001604   0x00000002   Code   RO          544    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x08001606   0x08001606   0x00000002   PAD
    0x08001608   0x08001608   0x00000002   Code   RO          546    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x0800160a   0x0800160a   0x00000002   PAD
    0x0800160c   0x0800160c   0x00000002   Code   RO          536    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x0800160e   0x0800160e   0x00000002   PAD
    0x08001610   0x08001610   0x00000002   Code   RO          538    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08001612   0x08001612   0x00000002   PAD
    0x08001614   0x08001614   0x00000002   Code   RO          540    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x08001616   0x08001616   0x00000002   PAD
    0x08001618   0x08001618   0x00000002   Code   RO          550    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x0800161a   0x0800161a   0x00000002   PAD
    0x0800161c   0x0800161c   0x00000002   Code   RO          530    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x0800161e   0x0800161e   0x00000002   PAD
    0x08001620   0x08001620   0x00000002   Code   RO          532    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x08001622   0x08001622   0x00000002   PAD
    0x08001624   0x08001624   0x00000002   Code   RO          534    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x08001626   0x08001626   0x00000002   PAD
    0x08001628   0x08001628   0x00000002   Code   RO          548    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x0800162a   0x0800162a   0x00000002   PAD
    0x0800162c   0x0800162c   0x00000002   Code   RO          438    .text.EvrRtxMutexAcquire  rtx_evr.o
    0x0800162e   0x0800162e   0x00000002   PAD
    0x08001630   0x08001630   0x00000002   Code   RO          440    .text.EvrRtxMutexAcquirePending  rtx_evr.o
    0x08001632   0x08001632   0x00000002   PAD
    0x08001634   0x08001634   0x00000002   Code   RO          442    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x08001636   0x08001636   0x00000002   PAD
    0x08001638   0x08001638   0x00000002   Code   RO          444    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x0800163a   0x0800163a   0x00000002   PAD
    0x0800163c   0x0800163c   0x00000002   Code   RO          434    .text.EvrRtxMutexCreated  rtx_evr.o
    0x0800163e   0x0800163e   0x00000002   PAD
    0x08001640   0x08001640   0x00000002   Code   RO          454    .text.EvrRtxMutexDelete  rtx_evr.o
    0x08001642   0x08001642   0x00000002   PAD
    0x08001644   0x08001644   0x00000002   Code   RO          456    .text.EvrRtxMutexDestroyed  rtx_evr.o
    0x08001646   0x08001646   0x00000002   PAD
    0x08001648   0x08001648   0x00000002   Code   RO          430    .text.EvrRtxMutexError  rtx_evr.o
    0x0800164a   0x0800164a   0x00000002   PAD
    0x0800164c   0x0800164c   0x00000002   Code   RO          432    .text.EvrRtxMutexNew  rtx_evr.o
    0x0800164e   0x0800164e   0x00000002   PAD
    0x08001650   0x08001650   0x00000002   Code   RO          446    .text.EvrRtxMutexNotAcquired  rtx_evr.o
    0x08001652   0x08001652   0x00000002   PAD
    0x08001654   0x08001654   0x00000002   Code   RO          448    .text.EvrRtxMutexRelease  rtx_evr.o
    0x08001656   0x08001656   0x00000002   PAD
    0x08001658   0x08001658   0x00000002   Code   RO          450    .text.EvrRtxMutexReleased  rtx_evr.o
    0x0800165a   0x0800165a   0x00000002   PAD
    0x0800165c   0x0800165c   0x00000002   Code   RO          470    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x0800165e   0x0800165e   0x00000002   PAD
    0x08001660   0x08001660   0x00000002   Code   RO          322    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x08001662   0x08001662   0x00000002   PAD
    0x08001664   0x08001664   0x00000002   Code   RO          284    .text.EvrRtxThreadCreated  rtx_evr.o
    0x08001666   0x08001666   0x00000002   PAD
    0x08001668   0x08001668   0x00000002   Code   RO          334    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x0800166a   0x0800166a   0x00000002   PAD
    0x0800166c   0x0800166c   0x00000002   Code   RO          280    .text.EvrRtxThreadError  rtx_evr.o
    0x0800166e   0x0800166e   0x00000002   PAD
    0x08001670   0x08001670   0x00000002   Code   RO          330    .text.EvrRtxThreadExit  rtx_evr.o
    0x08001672   0x08001672   0x00000002   PAD
    0x08001674   0x08001674   0x00000002   Code   RO          340    .text.EvrRtxThreadFlagsError  rtx_evr.o
    0x08001676   0x08001676   0x00000002   PAD
    0x08001678   0x08001678   0x00000002   Code   RO          342    .text.EvrRtxThreadFlagsSet  rtx_evr.o
    0x0800167a   0x0800167a   0x00000002   PAD
    0x0800167c   0x0800167c   0x00000002   Code   RO          344    .text.EvrRtxThreadFlagsSetDone  rtx_evr.o
    0x0800167e   0x0800167e   0x00000002   PAD
    0x08001680   0x08001680   0x00000002   Code   RO          352    .text.EvrRtxThreadFlagsWait  rtx_evr.o
    0x08001682   0x08001682   0x00000002   PAD
    0x08001684   0x08001684   0x00000002   Code   RO          358    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x08001686   0x08001686   0x00000002   PAD
    0x08001688   0x08001688   0x00000002   Code   RO          360    .text.EvrRtxThreadFlagsWaitNotCompleted  rtx_evr.o
    0x0800168a   0x0800168a   0x00000002   PAD
    0x0800168c   0x0800168c   0x00000002   Code   RO          354    .text.EvrRtxThreadFlagsWaitPending  rtx_evr.o
    0x0800168e   0x0800168e   0x00000002   PAD
    0x08001690   0x08001690   0x00000002   Code   RO          356    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x08001692   0x08001692   0x00000002   PAD
    0x08001694   0x08001694   0x00000002   Code   RO          288    .text.EvrRtxThreadGetId  rtx_evr.o
    0x08001696   0x08001696   0x00000002   PAD
    0x08001698   0x08001698   0x00000002   Code   RO          320    .text.EvrRtxThreadJoined  rtx_evr.o
    0x0800169a   0x0800169a   0x00000002   PAD
    0x0800169c   0x0800169c   0x00000002   Code   RO          282    .text.EvrRtxThreadNew  rtx_evr.o
    0x0800169e   0x0800169e   0x00000002   PAD
    0x080016a0   0x080016a0   0x00000002   Code   RO          326    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x080016a2   0x080016a2   0x00000002   PAD
    0x080016a4   0x080016a4   0x00000002   Code   RO          328    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x080016a6   0x080016a6   0x00000002   PAD
    0x080016a8   0x080016a8   0x00000002   Code   RO          324    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x080016aa   0x080016aa   0x00000002   PAD
    0x080016ac   0x080016ac   0x00000002   Code   RO          376    .text.EvrRtxTimerCallback  rtx_evr.o
    0x080016ae   0x080016ae   0x00000002   PAD
    0x080016b0   0x080016b0   0x00000112   Code   RO         1584    .text.HAL_GPIO_DeInit  stm32f2xx_hal_gpio.o
    0x080017c2   0x080017c2   0x00000002   PAD
    0x080017c4   0x080017c4   0x0000019c   Code   RO         1582    .text.HAL_GPIO_Init  stm32f2xx_hal_gpio.o
    0x08001960   0x08001960   0x00000050   Code   RO            6    .text.HAL_GetTick   main.o
    0x080019b0   0x080019b0   0x00000036   Code   RO         1391    .text.HAL_Init      stm32f2xx_hal.o
    0x080019e6   0x080019e6   0x00000002   PAD
    0x080019e8   0x080019e8   0x00000004   Code   RO            8    .text.HAL_InitTick  main.o
    0x080019ec   0x080019ec   0x00000002   Code   RO         1395    .text.HAL_MspInit   stm32f2xx_hal.o
    0x080019ee   0x080019ee   0x00000002   PAD
    0x080019f0   0x080019f0   0x00000008   Code   RO         1472    .text.HAL_NVIC_DisableIRQ  stm32f2xx_hal_cortex.o
    0x080019f8   0x080019f8   0x00000008   Code   RO         1456    .text.HAL_NVIC_SetPriorityGrouping  stm32f2xx_hal_cortex.o
    0x08001a00   0x08001a00   0x0000015c   Code   RO         1668    .text.HAL_RCC_ClockConfig  stm32f2xx_hal_rcc.o
    0x08001b5c   0x08001b5c   0x0000000c   Code   RO         1678    .text.HAL_RCC_GetHCLKFreq  stm32f2xx_hal_rcc.o
    0x08001b68   0x08001b68   0x00000022   Code   RO         1680    .text.HAL_RCC_GetPCLK1Freq  stm32f2xx_hal_rcc.o
    0x08001b8a   0x08001b8a   0x00000002   PAD
    0x08001b8c   0x08001b8c   0x00000068   Code   RO         1670    .text.HAL_RCC_GetSysClockFreq  stm32f2xx_hal_rcc.o
    0x08001bf4   0x08001bf4   0x0000032a   Code   RO         1666    .text.HAL_RCC_OscConfig  stm32f2xx_hal_rcc.o
    0x08001f1e   0x08001f1e   0x00000002   PAD
    0x08001f20   0x08001f20   0x0000002e   Code   RO         1355    .text.ITM_SendChar  retarget_io.o
    0x08001f4e   0x08001f4e   0x00000002   PAD
    0x08001f50   0x08001f50   0x0000000c   Code   RO          581    .text.IsException   rtx_kernel.o
    0x08001f5c   0x08001f5c   0x0000000c   Code   RO          801    .text.IsException   rtx_msgqueue.o
    0x08001f68   0x08001f68   0x0000000c   Code   RO          879    .text.IsException   rtx_mutex.o
    0x08001f74   0x08001f74   0x0000000c   Code   RO         1063    .text.IsException   rtx_thread.o
    0x08001f80   0x08001f80   0x00000018   Code   RO          583    .text.IsIrqMasked   rtx_kernel.o
    0x08001f98   0x08001f98   0x00000018   Code   RO          803    .text.IsIrqMasked   rtx_msgqueue.o
    0x08001fb0   0x08001fb0   0x00000018   Code   RO          881    .text.IsIrqMasked   rtx_mutex.o
    0x08001fc8   0x08001fc8   0x00000018   Code   RO         1065    .text.IsIrqMasked   rtx_thread.o
    0x08001fe0   0x08001fe0   0x0000000c   Code   RO          587    .text.IsPrivileged  rtx_kernel.o
    0x08001fec   0x08001fec   0x00000034   Code   RO           34    .text.LED_clear     led.o
    0x08002020   0x08002020   0x0000001c   Code   RO           32    .text.LED_end_frame  led.o
    0x0800203c   0x0800203c   0x00000090   Code   RO           22    .text.LED_init      led.o
    0x080020cc   0x080020cc   0x00000070   Code   RO           40    .text.LED_send      led.o
    0x0800213c   0x0800213c   0x00000034   Code   RO           36    .text.LED_set_color  led.o
    0x08002170   0x08002170   0x00000028   Code   RO           38    .text.LED_set_colors  led.o
    0x08002198   0x08002198   0x00000010   Code   RO           28    .text.LED_set_pile_colors  led.o
    0x080021a8   0x080021a8   0x00000098   Code   RO           24    .text.LED_spi_callback  led.o
    0x08002240   0x08002240   0x000000de   Code   RO           26    .text.LED_spi_thread  led.o
    0x0800231e   0x0800231e   0x00000002   PAD
    0x08002320   0x08002320   0x0000000e   Code   RO           30    .text.LED_start_frame  led.o
    0x0800232e   0x0800232e   0x00000002   PAD
    0x08002330   0x08002330   0x00000004   Code   RO          705    .text.MemBlockPtr   rtx_memory.o
    0x08002334   0x08002334   0x00000002   Code   RO          703    .text.MemHeadPtr    rtx_memory.o
    0x08002336   0x08002336   0x00000002   PAD
    0x08002338   0x08002338   0x0000002a   Code   RO          851    .text.MessageQueueGet  rtx_msgqueue.o
    0x08002362   0x08002362   0x00000002   PAD
    0x08002364   0x08002364   0x00000054   Code   RO          841    .text.MessageQueuePut  rtx_msgqueue.o
    0x080023b8   0x080023b8   0x00000024   Code   RO          837    .text.MessageQueueRemove  rtx_msgqueue.o
    0x080023dc   0x080023dc   0x0000000c   Code   RO         1247    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x080023e8   0x080023e8   0x00000032   Code   RO         1243    .text.OS_Tick_Enable  os_systick.o
    0x0800241a   0x0800241a   0x00000002   PAD
    0x0800241c   0x0800241c   0x00000006   Code   RO         1249    .text.OS_Tick_GetIRQn  os_systick.o
    0x08002422   0x08002422   0x00000002   PAD
    0x08002424   0x08002424   0x00000048   Code   RO         1241    .text.OS_Tick_Setup  os_systick.o
    0x0800246c   0x0800246c   0x00000008   Code   RO         1301    .text.SPI2_Control  spi_stm32f2xx.o
    0x08002474   0x08002474   0x00000008   Code   RO         1299    .text.SPI2_GetDataCount  spi_stm32f2xx.o
    0x0800247c   0x0800247c   0x00000008   Code   RO         1303    .text.SPI2_GetStatus  spi_stm32f2xx.o
    0x08002484   0x08002484   0x00000008   Code   RO         1279    .text.SPI2_IRQHandler  spi_stm32f2xx.o
    0x0800248c   0x0800248c   0x0000000a   Code   RO         1287    .text.SPI2_Initialize  spi_stm32f2xx.o
    0x08002496   0x08002496   0x00000002   PAD
    0x08002498   0x08002498   0x00000008   Code   RO         1291    .text.SPI2_PowerControl  spi_stm32f2xx.o
    0x080024a0   0x080024a0   0x00000008   Code   RO         1295    .text.SPI2_Receive  spi_stm32f2xx.o
    0x080024a8   0x080024a8   0x00000008   Code   RO         1293    .text.SPI2_Send     spi_stm32f2xx.o
    0x080024b0   0x080024b0   0x00000008   Code   RO         1297    .text.SPI2_Transfer  spi_stm32f2xx.o
    0x080024b8   0x080024b8   0x0000000a   Code   RO         1289    .text.SPI2_Uninitialize  spi_stm32f2xx.o
    0x080024c2   0x080024c2   0x00000002   PAD
    0x080024c4   0x080024c4   0x00000004   Code   RO         1285    .text.SPIX_GetCapabilities  spi_stm32f2xx.o
    0x080024c8   0x080024c8   0x0000000a   Code   RO         1283    .text.SPIX_GetVersion  spi_stm32f2xx.o
    0x080024d2   0x080024d2   0x00000002   PAD
    0x080024d4   0x080024d4   0x000002d8   Code   RO         1317    .text.SPI_Control   spi_stm32f2xx.o
    0x080027ac   0x080027ac   0x0000000c   Code   RO         1335    .text.SPI_GetDataCount  spi_stm32f2xx.o
    0x080027b8   0x080027b8   0x00000028   Code   RO         1337    .text.SPI_GetStatus  spi_stm32f2xx.o
    0x080027e0   0x080027e0   0x000000f0   Code   RO         1281    .text.SPI_IRQHandler  spi_stm32f2xx.o
    0x080028d0   0x080028d0   0x000000a6   Code   RO         1309    .text.SPI_Initialize  spi_stm32f2xx.o
    0x08002976   0x08002976   0x00000002   PAD
    0x08002978   0x08002978   0x00000022   Code   RO         1319    .text.SPI_PeripheralReset  spi_stm32f2xx.o
    0x0800299a   0x0800299a   0x00000002   PAD
    0x0800299c   0x0800299c   0x000000c2   Code   RO         1315    .text.SPI_PowerControl  spi_stm32f2xx.o
    0x08002a5e   0x08002a5e   0x00000002   PAD
    0x08002a60   0x08002a60   0x00000082   Code   RO         1331    .text.SPI_Receive   spi_stm32f2xx.o
    0x08002ae2   0x08002ae2   0x00000002   PAD
    0x08002ae4   0x08002ae4   0x0000005a   Code   RO         1305    .text.SPI_RxData    spi_stm32f2xx.o
    0x08002b3e   0x08002b3e   0x00000002   PAD
    0x08002b40   0x08002b40   0x00000082   Code   RO         1329    .text.SPI_Send      spi_stm32f2xx.o
    0x08002bc2   0x08002bc2   0x00000002   PAD
    0x08002bc4   0x08002bc4   0x0000003a   Code   RO         1333    .text.SPI_Transfer  spi_stm32f2xx.o
    0x08002bfe   0x08002bfe   0x00000002   PAD
    0x08002c00   0x08002c00   0x0000005c   Code   RO         1307    .text.SPI_TxData    spi_stm32f2xx.o
    0x08002c5c   0x08002c5c   0x00000038   Code   RO         1313    .text.SPI_Uninitialize  spi_stm32f2xx.o
    0x08002c94   0x08002c94   0x00000030   Code   RO          629    .text.SVC_Setup     rtx_kernel.o
    0x08002cc4   0x08002cc4   0x00000010   Code   RO          995    .text.SetPendSV     rtx_system.o
    0x08002cd4   0x08002cd4   0x0000004a   Code   RO            4    .text.SystemClock_Config  main.o
    0x08002d1e   0x08002d1e   0x00000002   PAD
    0x08002d20   0x08002d20   0x0000007e   Code   RO         1945    .text.SystemCoreClockUpdate  system_stm32f2xx.o
    0x08002d9e   0x08002d9e   0x00000002   PAD
    0x08002da0   0x08002da0   0x00000046   Code   RO         1943    .text.SystemInit    system_stm32f2xx.o
    0x08002de6   0x08002de6   0x00000002   PAD
    0x08002de8   0x08002de8   0x0000003e   Code   RO         1113    .text.ThreadFlagsCheck  rtx_thread.o
    0x08002e26   0x08002e26   0x00000002   PAD
    0x08002e28   0x08002e28   0x0000000a   Code   RO         1163    .text.ThreadFlagsSet  rtx_thread.o
    0x08002e32   0x08002e32   0x00000002   PAD
    0x08002e34   0x08002e34   0x00000068   Code   RO         1215    .text.TimerInsert   rtx_timer.o
    0x08002e9c   0x08002e9c   0x00000016   Code   RO         1211    .text.TimerUnlink   rtx_timer.o
    0x08002eb2   0x08002eb2   0x00000002   PAD
    0x08002eb4   0x08002eb4   0x0000000e   Code   RO         1325    .text.__NVIC_ClearPendingIRQ  spi_stm32f2xx.o
    0x08002ec2   0x08002ec2   0x00000002   PAD
    0x08002ec4   0x08002ec4   0x00000028   Code   RO         1474    .text.__NVIC_DisableIRQ  stm32f2xx_hal_cortex.o
    0x08002eec   0x08002eec   0x0000000e   Code   RO         1327    .text.__NVIC_EnableIRQ  spi_stm32f2xx.o
    0x08002efa   0x08002efa   0x00000002   PAD
    0x08002efc   0x08002efc   0x00000010   Code   RO          631    .text.__NVIC_GetPriorityGrouping  rtx_kernel.o
    0x08002f0c   0x08002f0c   0x00000020   Code   RO         1458    .text.__NVIC_SetPriorityGrouping  stm32f2xx_hal_cortex.o
    0x08002f2c   0x08002f2c   0x00000056   Code   RO          667    .text.__user_perthread_libspace  rtx_lib.o
    0x08002f82   0x08002f82   0x00000002   PAD
    0x08002f84   0x08002f84   0x0000001a   Code   RO          673    .text._mutex_acquire  rtx_lib.o
    0x08002f9e   0x08002f9e   0x00000002   PAD
    0x08002fa0   0x08002fa0   0x0000000a   Code   RO          677    .text._mutex_free   rtx_lib.o
    0x08002faa   0x08002faa   0x00000002   PAD
    0x08002fac   0x08002fac   0x00000020   Code   RO          671    .text._mutex_initialize  rtx_lib.o
    0x08002fcc   0x08002fcc   0x00000016   Code   RO          675    .text._mutex_release  rtx_lib.o
    0x08002fe2   0x08002fe2   0x00000002   PAD
    0x08002fe4   0x08002fe4   0x00000008   Code   RO          665    .text._platform_post_stackheap_init  rtx_lib.o
    0x08002fec   0x08002fec   0x00000012   Code   RO         1361    .text._sys_close    retarget_io.o
    0x08002ffe   0x08002ffe   0x00000002   PAD
    0x08003000   0x08003000   0x00000004   Code   RO         1377    .text._sys_flen     retarget_io.o
    0x08003004   0x08003004   0x00000010   Code   RO         1373    .text._sys_istty    retarget_io.o
    0x08003014   0x08003014   0x00000064   Code   RO         1359    .text._sys_open     retarget_io.o
    0x08003078   0x08003078   0x00000006   Code   RO         1375    .text._sys_seek     retarget_io.o
    0x0800307e   0x0800307e   0x00000002   PAD
    0x08003080   0x08003080   0x00000042   Code   RO         1363    .text._sys_write    retarget_io.o
    0x080030c2   0x080030c2   0x00000002   PAD
    0x080030c4   0x080030c4   0x00000026   Code   RO         1115    .text.atomic_chk32_all  rtx_thread.o
    0x080030ea   0x080030ea   0x00000002   PAD
    0x080030ec   0x080030ec   0x00000022   Code   RO         1117    .text.atomic_chk32_any  rtx_thread.o
    0x0800310e   0x0800310e   0x00000002   PAD
    0x08003110   0x08003110   0x00000024   Code   RO          997    .text.atomic_dec16_nz  rtx_system.o
    0x08003134   0x08003134   0x00000010   Code   RO          731    .text.atomic_dec32  rtx_mempool.o
    0x08003144   0x08003144   0x0000001a   Code   RO          853    .text.atomic_dec32_nz  rtx_msgqueue.o
    0x0800315e   0x0800315e   0x00000002   PAD
    0x08003160   0x08003160   0x0000001a   Code   RO          999    .text.atomic_inc16_lim  rtx_system.o
    0x0800317a   0x0800317a   0x00000002   PAD
    0x0800317c   0x0800317c   0x00000028   Code   RO         1003    .text.atomic_inc16_lt  rtx_system.o
    0x080031a4   0x080031a4   0x00000010   Code   RO          725    .text.atomic_inc32  rtx_mempool.o
    0x080031b4   0x080031b4   0x00000010   Code   RO          843    .text.atomic_inc32  rtx_msgqueue.o
    0x080031c4   0x080031c4   0x0000001a   Code   RO          723    .text.atomic_link_get  rtx_mempool.o
    0x080031de   0x080031de   0x00000002   PAD
    0x080031e0   0x080031e0   0x0000001e   Code   RO          729    .text.atomic_link_put  rtx_mempool.o
    0x080031fe   0x080031fe   0x00000002   PAD
    0x08003200   0x08003200   0x00000016   Code   RO         1165    .text.atomic_set32  rtx_thread.o
    0x08003216   0x08003216   0x00000002   PAD
    0x08003218   0x08003218   0x00000012   Code   RO          855    .text.atomic_wr8    rtx_msgqueue.o
    0x0800322a   0x0800322a   0x00000002   PAD
    0x0800322c   0x0800322c   0x00000074   Code   RO          813    .text.isrRtxMessageQueueGet  rtx_msgqueue.o
    0x080032a0   0x080032a0   0x0000007e   Code   RO          809    .text.isrRtxMessageQueuePut  rtx_msgqueue.o
    0x0800331e   0x0800331e   0x00000002   PAD
    0x08003320   0x08003320   0x0000005a   Code   RO         1103    .text.isrRtxThreadFlagsSet  rtx_thread.o
    0x0800337a   0x0800337a   0x00000002   PAD
    0x0800337c   0x0800337c   0x0000002e   Code   RO          979    .text.isr_queue_get  rtx_system.o
    0x080033aa   0x080033aa   0x00000002   PAD
    0x080033ac   0x080033ac   0x00000032   Code   RO          993    .text.isr_queue_put  rtx_system.o
    0x080033de   0x080033de   0x00000002   PAD
    0x080033e0   0x080033e0   0x00000036   Code   RO            2    .text.main          main.o
    0x08003416   0x08003416   0x00000002   PAD
    0x08003418   0x08003418   0x00000026   Code   RO          591    .text.osKernelGetState  rtx_kernel.o
    0x0800343e   0x0800343e   0x00000002   PAD
    0x08003440   0x08003440   0x00000020   Code   RO          607    .text.osKernelGetTickCount  rtx_kernel.o
    0x08003460   0x08003460   0x00000032   Code   RO          579    .text.osKernelInitialize  rtx_kernel.o
    0x08003492   0x08003492   0x00000002   PAD
    0x08003494   0x08003494   0x0000002e   Code   RO          595    .text.osKernelStart  rtx_kernel.o
    0x080034c2   0x080034c2   0x00000002   PAD
    0x080034c4   0x080034c4   0x00000042   Code   RO          811    .text.osMessageQueueGet  rtx_msgqueue.o
    0x08003506   0x08003506   0x00000002   PAD
    0x08003508   0x08003508   0x00000042   Code   RO          807    .text.osMessageQueuePut  rtx_msgqueue.o
    0x0800354a   0x0800354a   0x00000002   PAD
    0x0800354c   0x0800354c   0x00000038   Code   RO          885    .text.osMutexAcquire  rtx_mutex.o
    0x08003584   0x08003584   0x00000034   Code   RO          891    .text.osMutexDelete  rtx_mutex.o
    0x080035b8   0x080035b8   0x00000032   Code   RO          877    .text.osMutexNew    rtx_mutex.o
    0x080035ea   0x080035ea   0x00000002   PAD
    0x080035ec   0x080035ec   0x00000034   Code   RO          887    .text.osMutexRelease  rtx_mutex.o
    0x08003620   0x08003620   0x00000002   Code   RO         1270    .text.osRtxErrorNotify  rtx_config.o
    0x08003622   0x08003622   0x00000002   PAD
    0x08003624   0x08003624   0x00000002   Code   RO          983    .text.osRtxEventFlagsObject  rtx_system.o
    0x08003626   0x08003626   0x00000002   PAD
    0x08003628   0x08003628   0x00000002   Code   RO         1268    .text.osRtxIdleThread  rtx_config.o
    0x0800362a   0x0800362a   0x00000002   PAD
    0x0800362c   0x0800362c   0x00000014   Code   RO          577    .text.osRtxKernelErrorNotify  rtx_kernel.o
    0x08003640   0x08003640   0x0000000c   Code   RO          975    .text.osRtxKernelGetState  rtx_system.o
    0x0800364c   0x0800364c   0x0000000c   Code   RO         1039    .text.osRtxKernelGetState  rtx_thread.o
    0x08003658   0x08003658   0x00000002   Code   RO          575    .text.osRtxKernelPreInit  rtx_kernel.o
    0x0800365a   0x0800365a   0x00000002   PAD
    0x0800365c   0x0800365c   0x0000000c   Code   RO          625    .text.osRtxKernelState  rtx_kernel.o
    0x08003668   0x08003668   0x000000b6   Code   RO          707    .text.osRtxMemoryAlloc  rtx_memory.o
    0x0800371e   0x0800371e   0x00000002   PAD
    0x08003720   0x08003720   0x00000078   Code   RO          709    .text.osRtxMemoryFree  rtx_memory.o
    0x08003798   0x08003798   0x00000064   Code   RO          701    .text.osRtxMemoryInit  rtx_memory.o
    0x080037fc   0x080037fc   0x0000002a   Code   RO          721    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x08003826   0x08003826   0x00000002   PAD
    0x08003828   0x08003828   0x00000042   Code   RO          727    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x0800386a   0x0800386a   0x00000002   PAD
    0x0800386c   0x0800386c   0x00000060   Code   RO          719    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x080038cc   0x080038cc   0x00000002   Code   RO          987    .text.osRtxMemoryPoolObject  rtx_system.o
    0x080038ce   0x080038ce   0x00000002   PAD
    0x080038d0   0x080038d0   0x00000002   Code   RO          989    .text.osRtxMessageObject  rtx_system.o
    0x080038d2   0x080038d2   0x00000002   PAD
    0x080038d4   0x080038d4   0x00000002   Code   RO          795    .text.osRtxMessageQueueId  rtx_msgqueue.o
    0x080038d6   0x080038d6   0x00000002   PAD
    0x080038d8   0x080038d8   0x00000102   Code   RO          835    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x080039da   0x080039da   0x00000002   PAD
    0x080039dc   0x080039dc   0x00000030   Code   RO          793    .text.osRtxMessageQueueTimerSetup  rtx_msgqueue.o
    0x08003a0c   0x08003a0c   0x00000002   Code   RO          897    .text.osRtxMutexId  rtx_mutex.o
    0x08003a0e   0x08003a0e   0x00000002   PAD
    0x08003a10   0x08003a10   0x00000002   Code   RO         1031    .text.osRtxMutexObject  rtx_thread.o
    0x08003a12   0x08003a12   0x00000002   PAD
    0x08003a14   0x08003a14   0x0000006a   Code   RO          871    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x08003a7e   0x08003a7e   0x00000002   PAD
    0x08003a80   0x08003a80   0x00000050   Code   RO          875    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x08003ad0   0x08003ad0   0x00000002   Code   RO          839    .text.osRtxObject   rtx_msgqueue.o
    0x08003ad2   0x08003ad2   0x00000002   PAD
    0x08003ad4   0x08003ad4   0x00000002   Code   RO          873    .text.osRtxObject   rtx_mutex.o
    0x08003ad6   0x08003ad6   0x00000002   PAD
    0x08003ad8   0x08003ad8   0x00000002   Code   RO         1001    .text.osRtxObject   rtx_system.o
    0x08003ada   0x08003ada   0x00000002   PAD
    0x08003adc   0x08003adc   0x00000002   Code   RO         1021    .text.osRtxObject   rtx_thread.o
    0x08003ade   0x08003ade   0x00000002   PAD
    0x08003ae0   0x08003ae0   0x00000064   Code   RO          977    .text.osRtxPendSV_Handler  rtx_system.o
    0x08003b44   0x08003b44   0x0000002c   Code   RO          991    .text.osRtxPostProcess  rtx_system.o
    0x08003b70   0x08003b70   0x00000002   Code   RO          985    .text.osRtxSemaphoreObject  rtx_system.o
    0x08003b72   0x08003b72   0x00000002   PAD
    0x08003b74   0x08003b74   0x00000048   Code   RO         1043    .text.osRtxThreadBlock  rtx_thread.o
    0x08003bbc   0x08003bbc   0x000000a0   Code   RO         1051    .text.osRtxThreadDelayInsert  rtx_thread.o
    0x08003c5c   0x08003c5c   0x00000050   Code   RO         1047    .text.osRtxThreadDelayRemove  rtx_thread.o
    0x08003cac   0x08003cac   0x000000cc   Code   RO         1027    .text.osRtxThreadDelayTick  rtx_thread.o
    0x08003d78   0x08003d78   0x00000036   Code   RO         1155    .text.osRtxThreadDestroy  rtx_thread.o
    0x08003dae   0x08003dae   0x00000002   PAD
    0x08003db0   0x08003db0   0x0000005e   Code   RO         1037    .text.osRtxThreadDispatch  rtx_thread.o
    0x08003e0e   0x08003e0e   0x00000002   PAD
    0x08003e10   0x08003e10   0x00000060   Code   RO         1145    .text.osRtxThreadFree  rtx_thread.o
    0x08003e70   0x08003e70   0x0000000c   Code   RO          849    .text.osRtxThreadGetRunning  rtx_msgqueue.o
    0x08003e7c   0x08003e7c   0x0000000c   Code   RO          901    .text.osRtxThreadGetRunning  rtx_mutex.o
    0x08003e88   0x08003e88   0x0000000c   Code   RO         1041    .text.osRtxThreadGetRunning  rtx_thread.o
    0x08003e94   0x08003e94   0x0000000c   Code   RO         1209    .text.osRtxThreadGetRunning  rtx_timer.o
    0x08003ea0   0x08003ea0   0x00000002   Code   RO         1057    .text.osRtxThreadId  rtx_thread.o
    0x08003ea2   0x08003ea2   0x00000002   PAD
    0x08003ea4   0x08003ea4   0x00000026   Code   RO         1151    .text.osRtxThreadJoinWakeup  rtx_thread.o
    0x08003eca   0x08003eca   0x00000002   PAD
    0x08003ecc   0x08003ecc   0x00000018   Code   RO         1017    .text.osRtxThreadListGet  rtx_thread.o
    0x08003ee4   0x08003ee4   0x00000034   Code   RO         1013    .text.osRtxThreadListPut  rtx_thread.o
    0x08003f18   0x08003f18   0x0000001a   Code   RO         1023    .text.osRtxThreadListRemove  rtx_thread.o
    0x08003f32   0x08003f32   0x00000002   PAD
    0x08003f34   0x08003f34   0x00000012   Code   RO         1029    .text.osRtxThreadListRoot  rtx_thread.o
    0x08003f46   0x08003f46   0x00000002   PAD
    0x08003f48   0x08003f48   0x00000030   Code   RO         1019    .text.osRtxThreadListSort  rtx_thread.o
    0x08003f78   0x08003f78   0x00000002   Code   RO          981    .text.osRtxThreadObject  rtx_system.o
    0x08003f7a   0x08003f7a   0x00000002   PAD
    0x08003f7c   0x08003f7c   0x00000002   Code   RO         1015    .text.osRtxThreadObject  rtx_thread.o
    0x08003f7e   0x08003f7e   0x00000002   PAD
    0x08003f80   0x08003f80   0x00000038   Code   RO         1111    .text.osRtxThreadPostProcess  rtx_thread.o
    0x08003fb8   0x08003fb8   0x00000018   Code   RO         1025    .text.osRtxThreadReadyPut  rtx_thread.o
    0x08003fd0   0x08003fd0   0x00000006   Code   RO         1033    .text.osRtxThreadRegPtr  rtx_thread.o
    0x08003fd6   0x08003fd6   0x00000002   PAD
    0x08003fd8   0x08003fd8   0x0000000c   Code   RO         1153    .text.osRtxThreadSetRunning  rtx_thread.o
    0x08003fe4   0x08003fe4   0x0000000c   Code   RO         1213    .text.osRtxThreadSetRunning  rtx_timer.o
    0x08003ff0   0x08003ff0   0x00000020   Code   RO         1053    .text.osRtxThreadStackCheck  rtx_thread.o
    0x08004010   0x08004010   0x00000050   Code   RO         1055    .text.osRtxThreadStartup  rtx_thread.o
    0x08004060   0x08004060   0x00000016   Code   RO         1035    .text.osRtxThreadSwitch  rtx_thread.o
    0x08004076   0x08004076   0x00000002   PAD
    0x08004078   0x08004078   0x0000005c   Code   RO         1049    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x080040d4   0x080040d4   0x0000002a   Code   RO         1045    .text.osRtxThreadWaitExit  rtx_thread.o
    0x080040fe   0x080040fe   0x00000002   PAD
    0x08004100   0x08004100   0x0000008a   Code   RO          973    .text.osRtxTick_Handler  rtx_system.o
    0x0800418a   0x0800418a   0x00000002   PAD
    0x0800418c   0x0800418c   0x00000026   Code   RO         1187    .text.osRtxTimerSetup  rtx_timer.o
    0x080041b2   0x080041b2   0x00000002   PAD
    0x080041b4   0x080041b4   0x0000002a   Code   RO         1191    .text.osRtxTimerThread  rtx_timer.o
    0x080041de   0x080041de   0x00000002   PAD
    0x080041e0   0x080041e0   0x00000088   Code   RO         1189    .text.osRtxTimerTick  rtx_timer.o
    0x08004268   0x08004268   0x0000001a   Code   RO         1093    .text.osThreadExit  rtx_thread.o
    0x08004282   0x08004282   0x00000002   PAD
    0x08004284   0x08004284   0x00000030   Code   RO         1101    .text.osThreadFlagsSet  rtx_thread.o
    0x080042b4   0x080042b4   0x0000003c   Code   RO         1109    .text.osThreadFlagsWait  rtx_thread.o
    0x080042f0   0x080042f0   0x00000020   Code   RO         1069    .text.osThreadGetId  rtx_thread.o
    0x08004310   0x08004310   0x0000003a   Code   RO         1061    .text.osThreadNew   rtx_thread.o
    0x0800434a   0x0800434a   0x00000002   PAD
    0x0800434c   0x0800434c   0x0000001e   Code   RO          669    .text.os_kernel_is_active  rtx_lib.o
    0x0800436a   0x0800436a   0x00000002   PAD
    0x0800436c   0x0800436c   0x00000008   Code   RO         1367    .text.stderr_putchar  retarget_io.o
    0x08004374   0x08004374   0x00000008   Code   RO         1365    .text.stdout_putchar  retarget_io.o
    0x0800437c   0x0800437c   0x00000010   Code   RO          593    .text.svcRtxKernelGetState  rtx_kernel.o
    0x0800438c   0x0800438c   0x00000014   Code   RO          609    .text.svcRtxKernelGetTickCount  rtx_kernel.o
    0x080043a0   0x080043a0   0x00000150   Code   RO          623    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x080044f0   0x080044f0   0x00000084   Code   RO          627    .text.svcRtxKernelStart  rtx_kernel.o
    0x08004574   0x08004574   0x0000012a   Code   RO          857    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x0800469e   0x0800469e   0x00000002   PAD
    0x080046a0   0x080046a0   0x00000188   Code   RO          797    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x08004828   0x08004828   0x0000010c   Code   RO          847    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x08004934   0x08004934   0x000000e6   Code   RO          899    .text.svcRtxMutexAcquire  rtx_mutex.o
    0x08004a1a   0x08004a1a   0x00000002   PAD
    0x08004a1c   0x08004a1c   0x000000d8   Code   RO          907    .text.svcRtxMutexDelete  rtx_mutex.o
    0x08004af4   0x08004af4   0x00000090   Code   RO          893    .text.svcRtxMutexNew  rtx_mutex.o
    0x08004b84   0x08004b84   0x000000f8   Code   RO          903    .text.svcRtxMutexRelease  rtx_mutex.o
    0x08004c7c   0x08004c7c   0x00000062   Code   RO         1149    .text.svcRtxThreadExit  rtx_thread.o
    0x08004cde   0x08004cde   0x00000002   PAD
    0x08004ce0   0x08004ce0   0x0000008e   Code   RO         1167    .text.svcRtxThreadFlagsSet  rtx_thread.o
    0x08004d6e   0x08004d6e   0x00000002   PAD
    0x08004d70   0x08004d70   0x000000a6   Code   RO         1177    .text.svcRtxThreadFlagsWait  rtx_thread.o
    0x08004e16   0x08004e16   0x00000002   PAD
    0x08004e18   0x08004e18   0x00000010   Code   RO         1071    .text.svcRtxThreadGetId  rtx_thread.o
    0x08004e28   0x08004e28   0x00000240   Code   RO         1059    .text.svcRtxThreadNew  rtx_thread.o
    0x08005068   0x08005068   0x0000001a   Code   RO         2031    i.fputc             c_w.l(fputc.o)
    0x08005082   0x08005082   0x00000002   PAD
    0x08005084   0x08005084   0x000000a8   Data   RO          683    .rodata             rtx_lib.o
    0x0800512c   0x0800512c   0x00000028   Data   RO           49    .rodata..L__const.LED_spi_thread.blue  led.o
    0x08005154   0x08005154   0x00000028   Data   RO           48    .rodata..L__const.LED_spi_thread.green  led.o
    0x0800517c   0x0800517c   0x00000028   Data   RO           47    .rodata..L__const.LED_spi_thread.red  led.o
    0x080051a4   0x080051a4   0x00000010   Data   RO         1948    .rodata.AHBPrescTable  system_stm32f2xx.o
    0x080051b4   0x080051b4   0x00000008   Data   RO         1949    .rodata.APBPrescTable  system_stm32f2xx.o
    0x080051bc   0x080051bc   0x0000002c   Data   RO         1339    .rodata.Driver_SPI2  spi_stm32f2xx.o
    0x080051e8   0x080051e8   0x00000024   Data   RO           44    .rodata.LED_SpiThreadAttr  led.o
    0x0800520c   0x0800520c   0x00000008   Data   RO         1382    .rodata.__stderr_name  retarget_io.o
    0x08005214   0x08005214   0x00000007   Data   RO         1380    .rodata.__stdin_name  retarget_io.o
    0x0800521b   0x0800521b   0x00000008   Data   RO         1381    .rodata.__stdout_name  retarget_io.o
    0x08005223   0x08005223   0x00000001   PAD
    0x08005224   0x08005224   0x00000004   Data   RO          685    .rodata.osRtxUserSVC  rtx_lib.o
    0x08005228   0x08005228   0x00000024   Data   RO          680    .rodata.os_idle_thread_attr  rtx_lib.o
    0x0800524c   0x0800524c   0x00000018   Data   RO          682    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08005264   0x08005264   0x00000024   Data   RO          681    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08005288   0x08005288   0x0000002f   Data   RO           42    .rodata.str1.1      led.o
    0x080052b7   0x080052b7   0x00000001   PAD
    0x080052b8   0x080052b8   0x0000000b   Data   RO          655    .rodata.str1.4      rtx_kernel.o
    0x080052c3   0x080052c3   0x00000001   PAD
    0x080052c4   0x080052c4   0x00000020   Data   RO         2367    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x080052e8, Size: 0x00002270, Max: 0x00020000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080052e8   0x00000004   Data   RW         2001    .data               c_w.l(stdio_streams.o)
    0x20000004   0x080052ec   0x00000004   Data   RW         2002    .data               c_w.l(stdio_streams.o)
    0x20000008   0x080052f0   0x00000004   Data   RW         2003    .data               c_w.l(stdio_streams.o)
    0x2000000c   0x080052f4   0x00000004   Data   RW         2123    .data               c_w.l(streamlock.o)
    0x20000010   0x080052f8   0x00000004   Data   RW         1947    .data.SystemCoreClock  system_stm32f2xx.o
    0x20000014   0x080052fc   0x00000001   Data   RW           45    .data.g_LedNumber   led.o
    0x20000015   0x080052fd   0x00000003   PAD
    0x20000018   0x08005300   0x000000a4   Data   RW          656    .data.os            rtx_kernel.o
    0x200000bc   0x080053a4   0x00000004   Data   RW         1445    .data.uwTickPrio    stm32f2xx_hal.o
    0x200000c0        -       0x00000054   Zero   RW         1998    .bss                c_w.l(stdio_streams.o)
    0x20000114        -       0x00000054   Zero   RW         1999    .bss                c_w.l(stdio_streams.o)
    0x20000168        -       0x00000054   Zero   RW         2000    .bss                c_w.l(stdio_streams.o)
    0x200001bc        -       0x00000060   Zero   RW         2271    .bss                c_w.l(libspace.o)
    0x2000021c        -       0x00000004   Zero   RW           10    .bss.HAL_GetTick.ticks  main.o
    0x20000220        -       0x00000004   Zero   RW           46    .bss.LED_SpiThreadID  led.o
    0x20000224        -       0x00000004   Zero   RW         1341    .bss.SPI2_Info.0    spi_stm32f2xx.o
    0x20000228        -       0x00000001   Zero   RW         1344    .bss.SPI2_Info.1.0  spi_stm32f2xx.o
    0x20000229   0x080053a8   0x00000003   PAD
    0x2000022c        -       0x00000001   Zero   RW         1345    .bss.SPI2_Info.1.1  spi_stm32f2xx.o
    0x2000022d   0x080053a8   0x00000001   PAD
    0x2000022e        -       0x00000001   Zero   RW         1346    .bss.SPI2_Info.1.2  spi_stm32f2xx.o
    0x2000022f   0x080053a8   0x00000001   PAD
    0x20000230        -       0x00000004   Zero   RW         1342    .bss.SPI2_Info.2    spi_stm32f2xx.o
    0x20000234        -       0x00000004   Zero   RW         1343    .bss.SPI2_Info.3    spi_stm32f2xx.o
    0x20000238        -       0x0000001c   Zero   RW         1340    .bss.SPI2_TransferInfo  spi_stm32f2xx.o
    0x20000254        -       0x000000d0   Zero   RW           50    .bss.g_DataFrame    led.o
    0x20000324   0x080053a8   0x00000004   PAD
    0x20000328        -       0x00000400   Zero   RW           43    .bss.g_SpiStack     led.o
    0x20000728        -       0x00001040   Zero   RW          679    .bss.os             rtx_lib.o
    0x20001768        -       0x00000001   Zero   RW         1259    .bss.os             os_systick.o
    0x20001769   0x080053a8   0x00000003   PAD
    0x2000176c        -       0x000001f0   Zero   RW          686    .bss.os.libspace    rtx_lib.o
    0x2000195c        -       0x00000034   Zero   RW          690    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001990        -       0x00000050   Zero   RW          691    .bss.os.msgqueue.mem  rtx_lib.o
    0x200019e0        -       0x00000088   Zero   RW          687    .bss.os.thread.cb   rtx_lib.o
    0x20001a68        -       0x00000100   Zero   RW          688    .bss.os.thread.idle.stack  rtx_lib.o
    0x20001b68        -       0x00000100   Zero   RW          689    .bss.os.thread.timer.stack  rtx_lib.o
    0x20001c68        -       0x00000001   Zero   RW          692    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20001c69   0x080053a8   0x00000007   PAD
    0x20001c70        -       0x00000200   Zero   RW         1934    HEAP                startup_stm32f207xx.o
    0x20001e70        -       0x00000400   Zero   RW         1933    STACK               startup_stm32f207xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       188         12          0          0          0        740   irq_armv7m.o
       832        136        203          1       1236       5648   led.o
       212          0          0          0          4       2244   main.o
       140          0          0          0          1       4799   os_systick.o
       272         24         23          0          0       3561   retarget_io.o
         4          0          0          0          0        667   rtx_config.o
       126          0          0          0          0      24325   rtx_evr.o
       816          0         11        164          0      15663   rtx_kernel.o
       214          0        268          0       5437       7319   rtx_lib.o
       408          0          0          0          0       2839   rtx_memory.o
       292          0          0          0          0      15151   rtx_mempool.o
      1912          0          0          0          0      18512   rtx_msgqueue.o
      1286          0          0          0          0      10138   rtx_mutex.o
       520         10          0          0          0       6547   rtx_system.o
      2878         10          0          0          0      31820   rtx_thread.o
       366          0          0          0          0      10430   rtx_timer.o
      2186         26         44          0         43      16199   spi_stm32f2xx.o
        64         26        388          0       1536        824   startup_stm32f207xx.o
        56          0          0          4          0       7552   stm32f2xx_hal.o
        88          0          0          0          0      10981   stm32f2xx_hal_cortex.o
       686          0          0          0          0       5181   stm32f2xx_hal_gpio.o
      1308          0          0          0          0       7794   stm32f2xx_hal_rcc.o
       196          0         24          4          0       2747   system_stm32f2xx.o

    ----------------------------------------------------------------------
     15372        244        996        176       8276     211681   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       322          0          3          3         19          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
       104          0          0          0          0         84   __printf.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
        64          6          0          0          0         84   _printf_char_file_locked.o
       120         16          0          0          0         92   _printf_dec.o
       178          0          0          0          0         88   _printf_intcommon.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         80   _printf_str.o
         6          0          0          0          0          0   _printf_u.o
        16          0          0          0          0         68   aeabi_memset4.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        52         38          0          0          0         76   defsig_rtred_inner.o
        14          0          0          0          0         80   defsig_rtred_outer.o
        18          0          0          0          0         80   exit.o
        76          0          0          0          0         88   fclose.o
       470          0          0          0          0         88   flsbuf.o
       332         10          0          0          0        152   fopen_locked.o
        26          0          0          0          0         68   fputc.o
       248          6          0          0          0         84   fseek.o
        66          0          0          0          0         76   ftell.o
       208          0          0          0          0         92   fwritefast_locked.o
       166          0          0          0          0        144   h1_alloc_threads.o
        82          0          0          0          0        104   h1_extend_threads.o
        10          0          0          0          0         76   h1_final_threads.o
       118          0          0          0          0        108   h1_free_threads.o
        18          0          0          0          0         84   h1_init_threads.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
       456         48          0          0          0        116   initio_locked.o
         2          0          0          0          0          0   libinit.o
        14          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
        10          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       240          0          0          0          0        100   lludivv7m.o
         0          0          0          0          0          0   maybetermalloc2.o
        20          0          0          0          0         84   noretval__2fprintf.o
        64          6          0          0          0         80   puts_locked.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       104          0          0          0          0         88   setvbuf_locked.o
       240          6          0          0          0        156   stdio.o
         0          0          0         12        252          0   stdio_streams.o
       128          0          0          0          0         68   strcmpv7m.o
         0          0          0          4          0          0   streamlock.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
        16          0          0          0          0         80   term_alloc.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      4852        216          0         16        348       4508   Library Totals
        18          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      4834        216          0         16        348       4508   c_w.l

    ----------------------------------------------------------------------
      4852        216          0         16        348       4508   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     20224        460        996        192       8624     213473   Grand Totals
     20224        460        996        192       8624     213473   ELF Image Totals
     20224        460        996        192          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                21220 (  20.72kB)
    Total RW  Size (RW Data + ZI Data)              8816 (   8.61kB)
    Total ROM Size (Code + RO Data + RW Data)      21412 (  20.91kB)

==============================================================================

